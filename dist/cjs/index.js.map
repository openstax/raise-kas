{"version":3,"file":"index.js","sources":["../../src/__genfiles__/unitparser.js","../../src/__genfiles__/parser.js","../../src/nodes.js","../../src/compare.js"],"sourcesContent":["// this is a @generated file\n\n/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,11],$V1=[1,9],$V2=[8,17],$V3=[6,11],$V4=[6,11,13,17];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"unitvalue\":3,\"magnitude\":4,\"unit\":5,\"EOF\":6,\"float\":7,\"POW\":8,\"int\":9,\"multatoms\":10,\"DIV\":11,\"expatom\":12,\"MUL\":13,\"atom\":14,\"^\":15,\"nat\":16,\"ATOM\":17,\"FLOAT\":18,\"NAT\":19,\"NEG\":20,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",6:\"EOF\",8:\"POW\",11:\"DIV\",13:\"MUL\",15:\"^\",17:\"ATOM\",18:\"FLOAT\",19:\"NAT\",20:\"NEG\"},\nproductions_: [0,[3,3],[3,2],[4,3],[4,1],[5,3],[5,1],[10,3],[10,2],[10,1],[12,3],[12,1],[14,1],[7,1],[7,1],[16,1],[9,2],[9,1]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\n\n            return {\n                type: \"unitMagnitude\",\n                magnitude: $$[$0-2],\n                unit: $$[$0-1],\n            };\n        \nbreak;\ncase 2:\n\n            return {\n                type: \"unitStandalone\",\n                unit: $$[$0-1],\n            }\n        \nbreak;\ncase 3:\n\n            this.$ = $$[$0-2] + \"e\" + $$[$0];\n        \nbreak;\ncase 4: case 13: case 14: case 15: case 17:\n this.$ = $$[$0]; \nbreak;\ncase 5:\n\n            this.$ = {\n                num: $$[$0-2],\n                denom: $$[$0],\n            };\n        \nbreak;\ncase 6:\n\n            this.$ = {\n                num: $$[$0],\n                denom: null,\n            };\n        \nbreak;\ncase 7:\n this.$ = [$$[$0-2]].concat($$[$0]); \nbreak;\ncase 8:\n this.$ = [$$[$0-1]].concat($$[$0]); \nbreak;\ncase 9:\n this.$ = [$$[$0]]; \nbreak;\ncase 10:\n\n            this.$ = {\n                name: $$[$0-2],\n                pow: $$[$0],\n            };\n        \nbreak;\ncase 11:\n\n            this.$ = {\n                name: $$[$0],\n                pow: 1,\n            };\n        \nbreak;\ncase 12:\n this.$ = yytext; \nbreak;\ncase 16:\n this.$ = \"-\" + $$[$0]; \nbreak;\n}\n},\ntable: [{3:1,4:2,5:3,7:4,10:5,12:8,14:10,16:7,17:$V0,18:[1,6],19:$V1},{1:[3]},{5:12,10:5,12:8,14:10,17:$V0},{6:[1,13]},{8:[1,14],17:[2,4]},{6:[2,6],11:[1,15]},o($V2,[2,13]),o($V2,[2,14]),o($V3,[2,9],{12:8,14:10,10:17,13:[1,16],17:$V0}),o([6,8,11,13,17],[2,15]),o($V4,[2,11],{15:[1,18]}),o([6,11,13,15,17],[2,12]),{6:[1,19]},{1:[2,2]},{9:20,19:[1,22],20:[1,21]},{10:23,12:8,14:10,17:$V0},{10:24,12:8,14:10,17:$V0},o($V3,[2,8]),{16:25,19:$V1},{1:[2,1]},{17:[2,3]},{19:[1,26]},{17:[2,17]},{6:[2,5]},o($V3,[2,7]),o($V4,[2,10]),{17:[2,16]}],\ndefaultActions: {13:[2,2],19:[2,1],20:[2,3],22:[2,17],23:[2,5],26:[2,16]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    //_token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:return 11;\nbreak;\ncase 1:return '(';\nbreak;\ncase 2:return ')';\nbreak;\ncase 3:return 8;\nbreak;\ncase 4:return 15;\nbreak;\ncase 5:return 13;\nbreak;\ncase 6:return 18;\nbreak;\ncase 7:return 19;\nbreak;\ncase 8:return 20;\nbreak;\ncase 9:return 17;\nbreak;\ncase 10:return 17;\nbreak;\ncase 11:return 17;\nbreak;\ncase 12:/* skip whitespace */\nbreak;\ncase 13:return 6;\nbreak;\n}\n},\nrules: [/^(?:\\/)/,/^(?:\\()/,/^(?:\\))/,/^(?:(\\*|x|\\u00d7|\\u2219|\\u22c5|\\u00b7)\\s*10\\s*\\^)/,/^(?:\\^)/,/^(?:\\*)/,/^(?:[0-9]+\\.[0-9]+)/,/^(?:[0-9]+)/,/^(?:-)/,/^(?:\\u00b0( ?)[cCfF])/,/^(?:fl\\.? oz\\.?)/,/^(?:[\\u00b5]?([A-Za-z-]+|[\\u2103\\u2109\\u212b]))/,/^(?:\\s+)/,/^(?:$)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\nexport const unitParser = parser;\n","// This is a @generated file\nimport _ from \"underscore\";\n\n/* parser generated by jison 0.4.18 */\n/*\n  Returns a Parser object of the following structure:\n\n  Parser: {\n    yy: {}\n  }\n\n  Parser.prototype: {\n    yy: {},\n    trace: function(),\n    symbols_: {associative list: name ==> number},\n    terminals_: {associative list: number ==> name},\n    productions_: [...],\n    performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$),\n    table: [...],\n    defaultActions: {...},\n    parseError: function(str, hash),\n    parse: function(input),\n\n    lexer: {\n        EOF: 1,\n        parseError: function(str, hash),\n        setInput: function(input),\n        input: function(),\n        unput: function(str),\n        more: function(),\n        less: function(n),\n        pastInput: function(),\n        upcomingInput: function(),\n        showPosition: function(),\n        test_match: function(regex_match_array, rule_index),\n        next: function(),\n        lex: function(),\n        begin: function(condition),\n        popState: function(),\n        _currentRules: function(),\n        topState: function(),\n        pushState: function(condition),\n\n        options: {\n            ranges: boolean           (optional: true ==> token location info will include a .range[] member)\n            flex: boolean             (optional: true ==> flex-like lexing behaviour where the rules are tested exhaustively to find the longest match)\n            backtrack_lexer: boolean  (optional: true ==> lexer regexes are tested in order and for each matching regex the action code is invoked; the lexer terminates the scan when a token is returned by the action code)\n        },\n\n        performAction: function(yy, yy_, $avoiding_name_collisions, YY_START),\n        rules: [...],\n        conditions: {associative list: name ==> set},\n    }\n  }\n\n\n  token location info (@$, _$, etc.): {\n    first_line: n,\n    last_line: n,\n    first_column: n,\n    last_column: n,\n    range: [start_number, end_number]       (where the numbers are indexes into the input string, regular zero-based)\n  }\n\n\n  the parseError function receives a 'hash' object with these members for lexer and parser errors: {\n    text:        (matched text)\n    token:       (the produced terminal token, if any)\n    line:        (yylineno)\n  }\n  while parser (grammar) errors will also provide these members, i.e. parser errors deliver a superset of attributes: {\n    loc:         (yylloc)\n    expected:    (string describing the set of expected tokens)\n    recoverable: (boolean: TRUE when the parser has a error recovery rule available for this particular error)\n  }\n*/\nvar parser = (function(){\nvar o=function(k,v,o,l){for(o=o||{},l=k.length;l--;o[k[l]]=v);return o},$V0=[1,7],$V1=[1,17],$V2=[1,13],$V3=[1,14],$V4=[1,15],$V5=[1,32],$V6=[1,22],$V7=[1,23],$V8=[1,24],$V9=[1,25],$Va=[1,26],$Vb=[1,33],$Vc=[1,27],$Vd=[1,28],$Ve=[1,29],$Vf=[1,30],$Vg=[1,20],$Vh=[1,36],$Vi=[1,37],$Vj=[5,6,8,10,33,35,41,43,45],$Vk=[1,39],$Vl=[1,40],$Vm=[5,6,8,10,12,14,16,19,21,22,28,29,30,31,32,33,34,35,37,39,41,42,43,44,45,46],$Vn=[10,16,19,21,22,28,29,30,31,32,34,37,39,42,43,44,46],$Vo=[5,6,8,10,12,14,16,18,19,21,22,28,29,30,31,32,33,34,35,37,39,41,42,43,44,45,46];\nvar parser = {trace: function trace () { },\nyy: {},\nsymbols_: {\"error\":2,\"equation\":3,\"expression\":4,\"SIGN\":5,\"EOF\":6,\"additive\":7,\"+\":8,\"multiplicative\":9,\"-\":10,\"triglog\":11,\"*\":12,\"negative\":13,\"/\":14,\"trig\":15,\"TRIG\":16,\"trigfunc\":17,\"^\":18,\"TRIGINV\":19,\"logbase\":20,\"ln\":21,\"log\":22,\"_\":23,\"subscriptable\":24,\"power\":25,\"primitive\":26,\"variable\":27,\"VAR\":28,\"CONST\":29,\"INT\":30,\"FLOAT\":31,\"{\":32,\"}\":33,\"(\":34,\")\":35,\"function\":36,\"FUNC\":37,\"invocation\":38,\"sqrt\":39,\"[\":40,\"]\":41,\"abs\":42,\"|\":43,\"LEFT|\":44,\"RIGHT|\":45,\"FRAC\":46,\"$accept\":0,\"$end\":1},\nterminals_: {2:\"error\",5:\"SIGN\",6:\"EOF\",8:\"+\",10:\"-\",12:\"*\",14:\"/\",16:\"TRIG\",18:\"^\",19:\"TRIGINV\",21:\"ln\",22:\"log\",23:\"_\",28:\"VAR\",29:\"CONST\",30:\"INT\",31:\"FLOAT\",32:\"{\",33:\"}\",34:\"(\",35:\")\",37:\"FUNC\",39:\"sqrt\",40:\"[\",41:\"]\",42:\"abs\",43:\"|\",44:\"LEFT|\",45:\"RIGHT|\",46:\"FRAC\"},\nproductions_: [0,[3,4],[3,2],[3,1],[4,1],[7,3],[7,3],[7,1],[9,2],[9,3],[9,3],[9,1],[13,2],[13,1],[15,1],[17,1],[17,3],[17,1],[20,1],[20,1],[20,3],[11,2],[11,2],[11,1],[25,3],[25,1],[27,1],[24,3],[24,1],[24,1],[24,1],[24,1],[24,3],[24,3],[36,1],[38,4],[38,4],[38,7],[38,4],[38,3],[38,3],[38,4],[26,1],[26,1],[26,7]],\nperformAction: function anonymous(yytext, yyleng, yylineno, yy, yystate /* action[1] */, $$ /* vstack */, _$ /* lstack */) {\n/* this == yyval */\n\nvar $0 = $$.length - 1;\nswitch (yystate) {\ncase 1:\nreturn new yy.Eq($$[$0-3], $$[$0-2], $$[$0-1]);\nbreak;\ncase 2:\nreturn $$[$0-1];\nbreak;\ncase 3:\nreturn new yy.Add([]);\nbreak;\ncase 4: case 7: case 11: case 13: case 15: case 20: case 23: case 25: case 42: case 43:\nthis.$ = $$[$0];\nbreak;\ncase 5:\nthis.$ = yy.Add.createOrAppend($$[$0-2], $$[$0]);\nbreak;\ncase 6:\nthis.$ = yy.Add.createOrAppend($$[$0-2], yy.Mul.handleNegative($$[$0], \"subtract\"));\nbreak;\ncase 8:\nthis.$ = yy.Mul.fold(yy.Mul.createOrAppend($$[$0-1], $$[$0]));\nbreak;\ncase 9:\nthis.$ = yy.Mul.fold(yy.Mul.createOrAppend($$[$0-2], $$[$0]));\nbreak;\ncase 10:\nthis.$ = yy.Mul.fold(yy.Mul.handleDivide($$[$0-2], $$[$0]));\nbreak;\ncase 12:\nthis.$ = yy.Mul.handleNegative($$[$0]);\nbreak;\ncase 14: case 17:\nthis.$ = [yytext];\nbreak;\ncase 16:\nthis.$ = $$[$0-2].concat($$[$0]);\nbreak;\ncase 18:\nthis.$ = yy.Log.natural();\nbreak;\ncase 19:\nthis.$ = yy.Log.common();\nbreak;\ncase 21:\nthis.$ = yy.Trig.create($$[$0-1], $$[$0]);\nbreak;\ncase 22:\nthis.$ = yy.Log.create($$[$0-1], $$[$0]);\nbreak;\ncase 24:\nthis.$ = new yy.Pow($$[$0-2], $$[$0]);\nbreak;\ncase 26: case 34:\nthis.$ = yytext;\nbreak;\ncase 27:\nthis.$ = new yy.Var($$[$0-2], $$[$0]);\nbreak;\ncase 28:\nthis.$ = new yy.Var($$[$0]);\nbreak;\ncase 29:\nthis.$ = new yy.Const(yytext.toLowerCase());\nbreak;\ncase 30:\nthis.$ = yy.Int.create(Number(yytext));\nbreak;\ncase 31:\nthis.$ = yy.Float.create(Number(yytext));\nbreak;\ncase 32:\nthis.$ = $$[$0-1].completeParse();\nbreak;\ncase 33:\nthis.$ = $$[$0-1].completeParse().addHint('parens');\nbreak;\ncase 35: case 36:\nthis.$ = yy.Pow.sqrt($$[$0-1]);\nbreak;\ncase 37:\nthis.$ = new yy.Pow.nthroot($$[$0-1], $$[$0-4]);\nbreak;\ncase 38: case 39: case 40:\nthis.$ = new yy.Abs($$[$0-1]);\nbreak;\ncase 41:\nthis.$ = new yy.Func($$[$0-3], $$[$0-1]);\nbreak;\ncase 44:\nthis.$ = yy.Mul.handleDivide($$[$0-4], $$[$0-1]);\nbreak;\n}\n},\ntable: [{3:1,4:2,6:[1,3],7:4,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{1:[3]},{5:[1,34],6:[1,35]},{1:[2,3]},o([5,6],[2,4],{8:$Vh,10:$Vi}),o($Vj,[2,7],{17:9,20:10,25:11,15:12,26:16,24:18,38:19,27:21,36:31,11:38,12:$Vk,14:$Vl,16:$V1,19:$V2,21:$V3,22:$V4,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,37:$Vb,39:$Vc,42:$Vd,44:$Vf,46:$Vg}),o($Vm,[2,11]),{10:$V0,11:8,13:41,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,13]),{10:$V0,11:8,13:42,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{10:$V0,11:8,13:43,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,23]),o($Vn,[2,15],{18:[1,44]}),o($Vn,[2,17]),o($Vn,[2,18]),o($Vn,[2,19],{23:[1,45]}),o($Vm,[2,25],{18:[1,46]}),o([10,16,18,19,21,22,28,29,30,31,32,34,37,39,42,43,44,46],[2,14]),o($Vo,[2,42]),o($Vo,[2,43]),{32:[1,47]},o($Vo,[2,28],{23:[1,48]}),o($Vo,[2,29]),o($Vo,[2,30]),o($Vo,[2,31]),{7:49,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:50,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{32:[1,52],34:[1,51],40:[1,53]},{34:[1,54]},{7:55,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:56,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{34:[1,57]},o([5,6,8,10,12,14,16,18,19,21,22,23,28,29,30,31,32,33,34,35,37,39,41,42,43,44,45,46],[2,26]),{34:[2,34]},{4:58,7:4,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{1:[2,2]},{9:59,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{9:60,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,8]),{10:$V0,11:8,13:61,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{10:$V0,11:8,13:62,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},o($Vm,[2,12]),o($Vm,[2,21]),o($Vm,[2,22]),{10:$V0,11:8,13:63,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{24:64,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va},{10:$V0,11:8,13:65,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:66,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{24:67,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va},{8:$Vh,10:$Vi,33:[1,68]},{8:$Vh,10:$Vi,35:[1,69]},{7:70,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:71,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:72,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:73,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{8:$Vh,10:$Vi,43:[1,74]},{8:$Vh,10:$Vi,45:[1,75]},{7:76,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{6:[1,77]},o($Vj,[2,5],{17:9,20:10,25:11,15:12,26:16,24:18,38:19,27:21,36:31,11:38,12:$Vk,14:$Vl,16:$V1,19:$V2,21:$V3,22:$V4,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,37:$Vb,39:$Vc,42:$Vd,44:$Vf,46:$Vg}),o($Vj,[2,6],{17:9,20:10,25:11,15:12,26:16,24:18,38:19,27:21,36:31,11:38,12:$Vk,14:$Vl,16:$V1,19:$V2,21:$V3,22:$V4,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,37:$Vb,39:$Vc,42:$Vd,44:$Vf,46:$Vg}),o($Vm,[2,9]),o($Vm,[2,10]),o($Vn,[2,16]),o($Vn,[2,20]),o($Vm,[2,24]),{8:$Vh,10:$Vi,33:[1,78]},o($Vo,[2,27]),o($Vo,[2,32]),o($Vo,[2,33]),{8:$Vh,10:$Vi,35:[1,79]},{8:$Vh,10:$Vi,33:[1,80]},{8:$Vh,10:$Vi,41:[1,81]},{8:$Vh,10:$Vi,35:[1,82]},o($Vo,[2,39]),o($Vo,[2,40]),{8:$Vh,10:$Vi,35:[1,83]},{1:[2,1]},{32:[1,84]},o($Vo,[2,35]),o($Vo,[2,36]),{32:[1,85]},o($Vo,[2,38]),o($Vo,[2,41]),{7:86,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{7:87,9:5,10:$V0,11:8,13:6,15:12,16:$V1,17:9,19:$V2,20:10,21:$V3,22:$V4,24:18,25:11,26:16,27:21,28:$V5,29:$V6,30:$V7,31:$V8,32:$V9,34:$Va,36:31,37:$Vb,38:19,39:$Vc,42:$Vd,43:$Ve,44:$Vf,46:$Vg},{8:$Vh,10:$Vi,33:[1,88]},{8:$Vh,10:$Vi,33:[1,89]},o($Vo,[2,44]),o($Vo,[2,37])],\ndefaultActions: {3:[2,3],33:[2,34],35:[2,2],77:[2,1]},\nparseError: function parseError (str, hash) {\n    if (hash.recoverable) {\n        this.trace(str);\n    } else {\n        var error = new Error(str);\n        error.hash = hash;\n        throw error;\n    }\n},\nparse: function parse(input) {\n    var self = this, stack = [0], tstack = [], vstack = [null], lstack = [], table = this.table, yytext = '', yylineno = 0, yyleng = 0, recovering = 0, TERROR = 2, EOF = 1;\n    var args = lstack.slice.call(arguments, 1);\n    var lexer = Object.create(this.lexer);\n    var sharedState = { yy: {} };\n    for (var k in this.yy) {\n        if (Object.prototype.hasOwnProperty.call(this.yy, k)) {\n            sharedState.yy[k] = this.yy[k];\n        }\n    }\n    lexer.setInput(input, sharedState.yy);\n    sharedState.yy.lexer = lexer;\n    sharedState.yy.parser = this;\n    if (typeof lexer.yylloc == 'undefined') {\n        lexer.yylloc = {};\n    }\n    var yyloc = lexer.yylloc;\n    lstack.push(yyloc);\n    var ranges = lexer.options && lexer.options.ranges;\n    if (typeof sharedState.yy.parseError === 'function') {\n        this.parseError = sharedState.yy.parseError;\n    } else {\n        this.parseError = Object.getPrototypeOf(this).parseError;\n    }\n    function popStack(n) {\n        stack.length = stack.length - 2 * n;\n        vstack.length = vstack.length - n;\n        lstack.length = lstack.length - n;\n    }\n    //_token_stack:\n        var lex = function () {\n            var token;\n            token = lexer.lex() || EOF;\n            if (typeof token !== 'number') {\n                token = self.symbols_[token] || token;\n            }\n            return token;\n        };\n    var symbol, preErrorSymbol, state, action, a, r, yyval = {}, p, len, newState, expected;\n    while (true) {\n        state = stack[stack.length - 1];\n        if (this.defaultActions[state]) {\n            action = this.defaultActions[state];\n        } else {\n            if (symbol === null || typeof symbol == 'undefined') {\n                symbol = lex();\n            }\n            action = table[state] && table[state][symbol];\n        }\n                    if (typeof action === 'undefined' || !action.length || !action[0]) {\n                var errStr = '';\n                expected = [];\n                for (p in table[state]) {\n                    if (this.terminals_[p] && p > TERROR) {\n                        expected.push('\\'' + this.terminals_[p] + '\\'');\n                    }\n                }\n                if (lexer.showPosition) {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ':\\n' + lexer.showPosition() + '\\nExpecting ' + expected.join(', ') + ', got \\'' + (this.terminals_[symbol] || symbol) + '\\'';\n                } else {\n                    errStr = 'Parse error on line ' + (yylineno + 1) + ': Unexpected ' + (symbol == EOF ? 'end of input' : '\\'' + (this.terminals_[symbol] || symbol) + '\\'');\n                }\n                this.parseError(errStr, {\n                    text: lexer.match,\n                    token: this.terminals_[symbol] || symbol,\n                    line: lexer.yylineno,\n                    loc: yyloc,\n                    expected: expected\n                });\n            }\n        if (action[0] instanceof Array && action.length > 1) {\n            throw new Error('Parse Error: multiple actions possible at state: ' + state + ', token: ' + symbol);\n        }\n        switch (action[0]) {\n        case 1:\n            stack.push(symbol);\n            vstack.push(lexer.yytext);\n            lstack.push(lexer.yylloc);\n            stack.push(action[1]);\n            symbol = null;\n            if (!preErrorSymbol) {\n                yyleng = lexer.yyleng;\n                yytext = lexer.yytext;\n                yylineno = lexer.yylineno;\n                yyloc = lexer.yylloc;\n                if (recovering > 0) {\n                    recovering--;\n                }\n            } else {\n                symbol = preErrorSymbol;\n                preErrorSymbol = null;\n            }\n            break;\n        case 2:\n            len = this.productions_[action[1]][1];\n            yyval.$ = vstack[vstack.length - len];\n            yyval._$ = {\n                first_line: lstack[lstack.length - (len || 1)].first_line,\n                last_line: lstack[lstack.length - 1].last_line,\n                first_column: lstack[lstack.length - (len || 1)].first_column,\n                last_column: lstack[lstack.length - 1].last_column\n            };\n            if (ranges) {\n                yyval._$.range = [\n                    lstack[lstack.length - (len || 1)].range[0],\n                    lstack[lstack.length - 1].range[1]\n                ];\n            }\n            r = this.performAction.apply(yyval, [\n                yytext,\n                yyleng,\n                yylineno,\n                sharedState.yy,\n                action[1],\n                vstack,\n                lstack\n            ].concat(args));\n            if (typeof r !== 'undefined') {\n                return r;\n            }\n            if (len) {\n                stack = stack.slice(0, -1 * len * 2);\n                vstack = vstack.slice(0, -1 * len);\n                lstack = lstack.slice(0, -1 * len);\n            }\n            stack.push(this.productions_[action[1]][0]);\n            vstack.push(yyval.$);\n            lstack.push(yyval._$);\n            newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n            stack.push(newState);\n            break;\n        case 3:\n            return true;\n        }\n    }\n    return true;\n}};\n/* generated by jison-lex 0.3.4 */\nvar lexer = (function(){\nvar lexer = ({\n\nEOF:1,\n\nparseError:function parseError(str, hash) {\n        if (this.yy.parser) {\n            this.yy.parser.parseError(str, hash);\n        } else {\n            throw new Error(str);\n        }\n    },\n\n// resets the lexer, sets new input\nsetInput:function (input, yy) {\n        this.yy = yy || this.yy || {};\n        this._input = input;\n        this._more = this._backtrack = this.done = false;\n        this.yylineno = this.yyleng = 0;\n        this.yytext = this.matched = this.match = '';\n        this.conditionStack = ['INITIAL'];\n        this.yylloc = {\n            first_line: 1,\n            first_column: 0,\n            last_line: 1,\n            last_column: 0\n        };\n        if (this.options.ranges) {\n            this.yylloc.range = [0,0];\n        }\n        this.offset = 0;\n        return this;\n    },\n\n// consumes and returns one char from the input\ninput:function () {\n        var ch = this._input[0];\n        this.yytext += ch;\n        this.yyleng++;\n        this.offset++;\n        this.match += ch;\n        this.matched += ch;\n        var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno++;\n            this.yylloc.last_line++;\n        } else {\n            this.yylloc.last_column++;\n        }\n        if (this.options.ranges) {\n            this.yylloc.range[1]++;\n        }\n\n        this._input = this._input.slice(1);\n        return ch;\n    },\n\n// unshifts one char (or a string) into the input\nunput:function (ch) {\n        var len = ch.length;\n        var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n        this._input = ch + this._input;\n        this.yytext = this.yytext.substr(0, this.yytext.length - len);\n        //this.yyleng -= len;\n        this.offset -= len;\n        var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n        this.match = this.match.substr(0, this.match.length - 1);\n        this.matched = this.matched.substr(0, this.matched.length - 1);\n\n        if (lines.length - 1) {\n            this.yylineno -= lines.length - 1;\n        }\n        var r = this.yylloc.range;\n\n        this.yylloc = {\n            first_line: this.yylloc.first_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.first_column,\n            last_column: lines ?\n                (lines.length === oldLines.length ? this.yylloc.first_column : 0)\n                 + oldLines[oldLines.length - lines.length].length - lines[0].length :\n              this.yylloc.first_column - len\n        };\n\n        if (this.options.ranges) {\n            this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n        }\n        this.yyleng = this.yytext.length;\n        return this;\n    },\n\n// When called from action, caches matched text and appends it on next action\nmore:function () {\n        this._more = true;\n        return this;\n    },\n\n// When called from action, signals the lexer that this rule fails to match the input, so the next matching rule (regex) should be tested instead.\nreject:function () {\n        if (this.options.backtrack_lexer) {\n            this._backtrack = true;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. You can only invoke reject() in the lexer when the lexer is of the backtracking persuasion (options.backtrack_lexer = true).\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n\n        }\n        return this;\n    },\n\n// retain first n characters of the match\nless:function (n) {\n        this.unput(this.match.slice(n));\n    },\n\n// displays already matched input, i.e. for error messages\npastInput:function () {\n        var past = this.matched.substr(0, this.matched.length - this.match.length);\n        return (past.length > 20 ? '...':'') + past.substr(-20).replace(/\\n/g, \"\");\n    },\n\n// displays upcoming input, i.e. for error messages\nupcomingInput:function () {\n        var next = this.match;\n        if (next.length < 20) {\n            next += this._input.substr(0, 20-next.length);\n        }\n        return (next.substr(0,20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n    },\n\n// displays the character position where the lexing error occurred, i.e. for error messages\nshowPosition:function () {\n        var pre = this.pastInput();\n        var c = new Array(pre.length + 1).join(\"-\");\n        return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n    },\n\n// test the lexed token: return FALSE when not a match, otherwise return token\ntest_match:function(match, indexed_rule) {\n        var token,\n            lines,\n            backup;\n\n        if (this.options.backtrack_lexer) {\n            // save context\n            backup = {\n                yylineno: this.yylineno,\n                yylloc: {\n                    first_line: this.yylloc.first_line,\n                    last_line: this.last_line,\n                    first_column: this.yylloc.first_column,\n                    last_column: this.yylloc.last_column\n                },\n                yytext: this.yytext,\n                match: this.match,\n                matches: this.matches,\n                matched: this.matched,\n                yyleng: this.yyleng,\n                offset: this.offset,\n                _more: this._more,\n                _input: this._input,\n                yy: this.yy,\n                conditionStack: this.conditionStack.slice(0),\n                done: this.done\n            };\n            if (this.options.ranges) {\n                backup.yylloc.range = this.yylloc.range.slice(0);\n            }\n        }\n\n        lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n        if (lines) {\n            this.yylineno += lines.length;\n        }\n        this.yylloc = {\n            first_line: this.yylloc.last_line,\n            last_line: this.yylineno + 1,\n            first_column: this.yylloc.last_column,\n            last_column: lines ?\n                         lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length :\n                         this.yylloc.last_column + match[0].length\n        };\n        this.yytext += match[0];\n        this.match += match[0];\n        this.matches = match;\n        this.yyleng = this.yytext.length;\n        if (this.options.ranges) {\n            this.yylloc.range = [this.offset, this.offset += this.yyleng];\n        }\n        this._more = false;\n        this._backtrack = false;\n        this._input = this._input.slice(match[0].length);\n        this.matched += match[0];\n        token = this.performAction.call(this, this.yy, this, indexed_rule, this.conditionStack[this.conditionStack.length - 1]);\n        if (this.done && this._input) {\n            this.done = false;\n        }\n        if (token) {\n            return token;\n        } else if (this._backtrack) {\n            // recover context\n            for (var k in backup) {\n                this[k] = backup[k];\n            }\n            return false; // rule action called reject() implying the next rule should be tested instead.\n        }\n        return false;\n    },\n\n// return next match in input\nnext:function () {\n        if (this.done) {\n            return this.EOF;\n        }\n        if (!this._input) {\n            this.done = true;\n        }\n\n        var token,\n            match,\n            tempMatch,\n            index;\n        if (!this._more) {\n            this.yytext = '';\n            this.match = '';\n        }\n        var rules = this._currentRules();\n        for (var i = 0; i < rules.length; i++) {\n            tempMatch = this._input.match(this.rules[rules[i]]);\n            if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n                match = tempMatch;\n                index = i;\n                if (this.options.backtrack_lexer) {\n                    token = this.test_match(tempMatch, rules[i]);\n                    if (token !== false) {\n                        return token;\n                    } else if (this._backtrack) {\n                        match = false;\n                        continue; // rule action called reject() implying a rule MISmatch.\n                    } else {\n                        // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n                        return false;\n                    }\n                } else if (!this.options.flex) {\n                    break;\n                }\n            }\n        }\n        if (match) {\n            token = this.test_match(match, rules[index]);\n            if (token !== false) {\n                return token;\n            }\n            // else: this is a lexer rule which consumes input without producing a token (e.g. whitespace)\n            return false;\n        }\n        if (this._input === \"\") {\n            return this.EOF;\n        } else {\n            return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), {\n                text: \"\",\n                token: null,\n                line: this.yylineno\n            });\n        }\n    },\n\n// return next match that has a token\nlex:function lex () {\n        var r = this.next();\n        if (r) {\n            return r;\n        } else {\n            return this.lex();\n        }\n    },\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nbegin:function begin (condition) {\n        this.conditionStack.push(condition);\n    },\n\n// pop the previously active lexer condition state off the condition stack\npopState:function popState () {\n        var n = this.conditionStack.length - 1;\n        if (n > 0) {\n            return this.conditionStack.pop();\n        } else {\n            return this.conditionStack[0];\n        }\n    },\n\n// produce the lexer rule set which is active for the currently active lexer condition state\n_currentRules:function _currentRules () {\n        if (this.conditionStack.length && this.conditionStack[this.conditionStack.length - 1]) {\n            return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n        } else {\n            return this.conditions[\"INITIAL\"].rules;\n        }\n    },\n\n// return the currently active lexer condition state; when an index argument is provided it produces the N-th previous condition state, if available\ntopState:function topState (n) {\n        n = this.conditionStack.length - 1 - Math.abs(n || 0);\n        if (n >= 0) {\n            return this.conditionStack[n];\n        } else {\n            return \"INITIAL\";\n        }\n    },\n\n// alias for begin(condition)\npushState:function pushState (condition) {\n        this.begin(condition);\n    },\n\n// return the number of states currently on the stack\nstateStackSize:function stateStackSize() {\n        return this.conditionStack.length;\n    },\noptions: {\"flex\":true},\nperformAction: function anonymous(yy,yy_,$avoiding_name_collisions,YY_START) {\nvar YYSTATE=YY_START;\nswitch($avoiding_name_collisions) {\ncase 0:/* skip whitespace */\nbreak;\ncase 1:/* skip \\space */\nbreak;\ncase 2:/* skip '\\ ' */\nbreak;\ncase 3:return \"INT\"\nbreak;\ncase 4:return \"FLOAT\"\nbreak;\ncase 5:return \"^\"\nbreak;\ncase 6:return \"*\"\nbreak;\ncase 7:return \"*\"\nbreak;\ncase 8:return \"*\"\nbreak;\ncase 9:return \"*\"\nbreak;\ncase 10:return \"/\"\nbreak;\ncase 11:return \"/\"\nbreak;\ncase 12:return \"-\"\nbreak;\ncase 13:return \"-\"\nbreak;\ncase 14:return \"+\"\nbreak;\ncase 15:return \"^\"\nbreak;\ncase 16:return \"(\"\nbreak;\ncase 17:return \")\"\nbreak;\ncase 18:return \"(\"\nbreak;\ncase 19:return \")\"\nbreak;\ncase 20:return \"[\"\nbreak;\ncase 21:return \"]\"\nbreak;\ncase 22:return \"{\"\nbreak;\ncase 23:return \"}\"\nbreak;\ncase 24:return \"{\"\nbreak;\ncase 25:return \"}\"\nbreak;\ncase 26:return \"_\"\nbreak;\ncase 27:return \"|\"\nbreak;\ncase 28:return \"LEFT|\"\nbreak;\ncase 29:return \"RIGHT|\"\nbreak;\ncase 30:return \"!\"\nbreak;\ncase 31:return \"SIGN\"\nbreak;\ncase 32:yy_.yytext = \"<=\"; return \"SIGN\"\nbreak;\ncase 33:yy_.yytext = \">=\"; return \"SIGN\"\nbreak;\ncase 34:yy_.yytext = \"<=\"; return \"SIGN\"\nbreak;\ncase 35:yy_.yytext = \">=\"; return \"SIGN\"\nbreak;\ncase 36:yy_.yytext = \"<>\"; return \"SIGN\"\nbreak;\ncase 37:yy_.yytext = \"<>\"; return \"SIGN\"\nbreak;\ncase 38:yy_.yytext = \"<>\"; return \"SIGN\"\nbreak;\ncase 39:yy_.yytext = \"<>\"; return \"SIGN\"\nbreak;\ncase 40:yy_.yytext = \"<=\"; return \"SIGN\"\nbreak;\ncase 41:yy_.yytext = \">=\"; return \"SIGN\"\nbreak;\ncase 42:return \"FRAC\"\nbreak;\ncase 43:return \"FRAC\"\nbreak;\ncase 44:return \"sqrt\"\nbreak;\ncase 45:return \"abs\"\nbreak;\ncase 46:return \"ln\"\nbreak;\ncase 47:return \"log\"\nbreak;\ncase 48:return \"TRIG\"\nbreak;\ncase 49:return \"TRIG\"\nbreak;\ncase 50:return \"TRIG\"\nbreak;\ncase 51:return \"TRIG\"\nbreak;\ncase 52:yy_.yytext = \"sin\"; return \"TRIG\"\nbreak;\ncase 53:yy_.yytext = \"cos\"; return \"TRIG\"\nbreak;\ncase 54:yy_.yytext = \"tan\"; return \"TRIG\"\nbreak;\ncase 55:yy_.yytext = \"csc\"; return \"TRIG\"\nbreak;\ncase 56:yy_.yytext = \"sec\"; return \"TRIG\"\nbreak;\ncase 57:yy_.yytext = \"cot\"; return \"TRIG\"\nbreak;\ncase 58:yy_.yytext = \"arcsin\"; return \"TRIG\"\nbreak;\ncase 59:yy_.yytext = \"arccos\"; return \"TRIG\"\nbreak;\ncase 60:yy_.yytext = \"arctan\"; return \"TRIG\"\nbreak;\ncase 61:yy_.yytext = \"arccsc\"; return \"TRIG\"\nbreak;\ncase 62:yy_.yytext = \"arcsec\"; return \"TRIG\"\nbreak;\ncase 63:yy_.yytext = \"arccot\"; return \"TRIG\"\nbreak;\ncase 64:return \"TRIGINV\"\nbreak;\ncase 65:return \"TRIGINV\"\nbreak;\ncase 66:yy_.yytext = \"sinh\"; return \"TRIG\"\nbreak;\ncase 67:yy_.yytext = \"cosh\"; return \"TRIG\"\nbreak;\ncase 68:yy_.yytext = \"tanh\"; return \"TRIG\"\nbreak;\ncase 69:yy_.yytext = \"csch\"; return \"TRIG\"\nbreak;\ncase 70:yy_.yytext = \"sech\"; return \"TRIG\"\nbreak;\ncase 71:yy_.yytext = \"tanh\"; return \"TRIG\"\nbreak;\ncase 72:return \"CONST\"\nbreak;\ncase 73:yy_.yytext = \"pi\"; return \"CONST\"\nbreak;\ncase 74:yy_.yytext = \"pi\"; return \"CONST\"\nbreak;\ncase 75:return \"VAR\"\nbreak;\ncase 76:yy_.yytext = \"theta\"; return \"VAR\"\nbreak;\ncase 77:yy_.yytext = \"theta\"; return \"VAR\"\nbreak;\ncase 78:return \"VAR\"\nbreak;\ncase 79:yy_.yytext = \"phi\"; return \"VAR\"\nbreak;\ncase 80:yy_.yytext = \"phi\"; return \"VAR\"\nbreak;\ncase 81:return yy.symbolLexer(yy_.yytext)\nbreak;\ncase 82:return \"EOF\"\nbreak;\ncase 83:return \"INVALID\"\nbreak;\ncase 84:console.log(yy_.yytext);\nbreak;\n}\n},\nrules: [/^(?:\\s+)/,/^(?:\\\\space)/,/^(?:\\\\ )/,/^(?:[0-9]+\\.?)/,/^(?:([0-9]+)?\\.[0-9]+)/,/^(?:\\*\\*)/,/^(?:\\*)/,/^(?:\\\\cdot|·)/,/^(?:\\\\times|×)/,/^(?:\\\\ast)/,/^(?:\\/)/,/^(?:\\\\div|÷)/,/^(?:-)/,/^(?:−)/,/^(?:\\+)/,/^(?:\\^)/,/^(?:\\()/,/^(?:\\))/,/^(?:\\\\left\\()/,/^(?:\\\\right\\))/,/^(?:\\[)/,/^(?:\\])/,/^(?:\\{)/,/^(?:\\})/,/^(?:\\\\left\\{)/,/^(?:\\\\right\\})/,/^(?:_)/,/^(?:\\|)/,/^(?:\\\\left\\|)/,/^(?:\\\\right\\|)/,/^(?:\\!)/,/^(?:<=|>=|<>|<|>|=)/,/^(?:\\\\le)/,/^(?:\\\\ge)/,/^(?:\\\\leq)/,/^(?:\\\\geq)/,/^(?:=\\/=)/,/^(?:\\\\ne)/,/^(?:\\\\neq)/,/^(?:≠)/,/^(?:≤)/,/^(?:≥)/,/^(?:\\\\frac)/,/^(?:\\\\dfrac)/,/^(?:sqrt|\\\\sqrt)/,/^(?:abs|\\\\abs)/,/^(?:ln|\\\\ln)/,/^(?:log|\\\\log)/,/^(?:sin|cos|tan)/,/^(?:csc|sec|cot)/,/^(?:sinh|cosh|tanh)/,/^(?:csch|sech|coth)/,/^(?:\\\\sin)/,/^(?:\\\\cos)/,/^(?:\\\\tan)/,/^(?:\\\\csc)/,/^(?:\\\\sec)/,/^(?:\\\\cot)/,/^(?:\\\\arcsin)/,/^(?:\\\\arccos)/,/^(?:\\\\arctan)/,/^(?:\\\\arccsc)/,/^(?:\\\\arcsec)/,/^(?:\\\\arccot)/,/^(?:arcsin|arccos|arctan)/,/^(?:arccsc|arcsec|arccot)/,/^(?:\\\\sinh)/,/^(?:\\\\cosh)/,/^(?:\\\\tanh)/,/^(?:\\\\csch)/,/^(?:\\\\sech)/,/^(?:\\\\coth)/,/^(?:pi)/,/^(?:π)/,/^(?:\\\\pi)/,/^(?:theta)/,/^(?:θ)/,/^(?:\\\\theta)/,/^(?:phi)/,/^(?:φ)/,/^(?:\\\\phi)/,/^(?:[a-zA-Z])/,/^(?:$)/,/^(?:.)/,/^(?:.)/],\nconditions: {\"INITIAL\":{\"rules\":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84],\"inclusive\":true}}\n});\nreturn lexer;\n})();\nparser.lexer = lexer;\nfunction Parser () {\n  this.yy = {};\n}\nParser.prototype = parser;parser.Parser = Parser;\nreturn new Parser;\n})();\n\nexport {parser};\n","/* eslint-disable prettier/prettier */\n/* eslint-disable import/order */\n/* TODO(charlie): fix these lint errors (http://eslint.org/docs/rules): */\n/* eslint-disable indent, no-undef, no-var, one-var, no-dupe-keys, no-new-func, no-redeclare, @typescript-eslint/no-unused-vars, comma-dangle, max-len, prefer-spread, space-infix-ops, space-unary-ops */\nimport _ from \"underscore\";\n\nimport {unitParser} from \"./__genfiles__/unitparser\";\nimport {parser} from \"./__genfiles__/parser\";\n\n/*  The node hierarcy is as follows:\n\n    (Expr)\n        (Seq)           2+ children\n            Add\n            Mul\n        Pow             2 children\n        Log             2 children\n        Eq              2 children\n        Trig            1 child\n        Abs             1 child\n        (Symbol)\n            Func        1 child     e.g. f(x)\n            Var         leaf node   e.g. x, x_n\n            Const       leaf node   e.g. pi, e, <i>\n            Unit        leaf node   e.g. kg\n        (Num)           leaf node\n            Rational                e.g. 2/3\n                Int\n            Float\n\n    (abstract, not meant to be instantiated)\n\n    == Key design concepts ==\n    Functional: All methods return new nodes - nodes are never mutated.\n    Ignore commutativity: Commutative inputs should be parsed equivalently.\n    Exploit commutativity: Output should take advantage of ordering.\n*/\n\n/* non user-facing functions */\n\n// assert that all abstract methods have been overridden\nvar abstract = function () {\n    // Try to give people a bit of information when this happens\n    throw new Error(\n        \"Abstract method - must override for expr: \" +\n            // eslint-disable-next-line @babel/no-invalid-this\n            this.print(),\n    );\n};\n\n// throw an error that is meant to be caught by the test suite (not user facing)\nvar error = function (message) {\n    throw new Error(message);\n};\n\n// reliably detect NaN\nvar isNaN = function (object) {\n    return object !== object;\n};\n\n// return a random float between min (inclusive) and max (exclusive),\n// not that inclusivity means much, probabilistically, on floats\nvar randomFloat = function (min, max) {\n    var extent = max - min;\n    return Math.random() * extent + min;\n};\n\n/* constants */\nvar ITERATIONS = 12;\nvar TOLERANCE = 9; // decimal places\n\n/* abstract base expression node */\nfunction Expr() {}\n\n_.extend(Expr.prototype, {\n    // this node's immediate constructor\n    func: abstract,\n\n    // an array of the arguments to this node's immediate constructor\n    args: abstract,\n\n    // make a new node with the given arguments\n    construct: function (args) {\n        var instance = new this.func();\n        this.func.apply(instance, args);\n        return instance;\n    },\n\n    // an abstraction for chainable, bottom-up recursion\n    recurse: function (method) {\n        var passed = Array.prototype.slice.call(arguments, 1);\n        var args = _.map(this.args(), function (arg) {\n            return _.isString(arg) ? arg : arg[method].apply(arg, passed);\n        });\n        return this.construct(args);\n    },\n\n    // evaluate numerically with given variable mapping\n    eval: abstract,\n\n    codegen: abstract,\n\n    compile: function () {\n        var code = this.codegen();\n        try {\n            return new Function(\"vars\", \"return \" + code + \";\");\n        } catch (e) {\n            throw new Error(\"Function did not compile: \" + code);\n        }\n    },\n\n    // returns a string unambiguously representing the expression\n    // should be valid as input\n    // e.g. this.equals(parse(this.print())) === true\n    print: abstract,\n\n    // returns a TeX string representing the expression\n    tex: abstract,\n\n    // returns a TeX string, modified by the given options\n    asTex: function (options) {\n        options = options || {};\n        _.defaults(options, {\n            display: true,\n            dynamic: true,\n            times: false,\n        });\n\n        var tex = this.tex();\n\n        if (options.display) {\n            tex = \"\\\\displaystyle \" + tex;\n        }\n        if (options.dynamic) {\n            tex = tex.replace(/\\(/g, \"\\\\left(\");\n            tex = tex.replace(/\\)/g, \"\\\\right)\");\n        }\n        if (options.times) {\n            tex = tex.replace(/\\\\cdot/g, \"\\\\times\");\n        }\n\n        return tex;\n    },\n\n    // returns the name of this expression's constructor as a string\n    // only used for testing and debugging (the ugly regex is for IE8)\n    name: function () {\n        if (this.func.name) {\n            return this.func.name;\n        } else {\n            return this.func.toString().match(/^function\\s*([^\\s(]+)/)[1];\n        }\n    },\n\n    // returns a string representing current node structure\n    repr: function () {\n        return (\n            this.name() +\n            \"(\" +\n            _.map(this.args(), function (arg) {\n                return _.isString(arg) ? arg : arg.repr();\n            }).join(\",\") +\n            \")\"\n        );\n    },\n\n    // removes all negative signs\n    strip: function () {\n        return this.recurse(\"strip\");\n    },\n\n    // canonically reorders all commutative elements\n    normalize: function () {\n        return this.recurse(\"normalize\");\n    },\n\n    // expands the expression\n    expand: function () {\n        return this.recurse(\"expand\");\n    },\n\n    // naively factors out like terms\n    factor: function (options) {\n        return this.recurse(\"factor\", options);\n    },\n\n    // collect all like terms\n    collect: function (options) {\n        return this.recurse(\"collect\", options);\n    },\n\n    // strict syntactic equality check\n    equals: function (other) {\n        return this.normalize().print() === other.normalize().print();\n    },\n\n    // expand and collect until the expression no longer changes\n    simplify: function (options) {\n        options = _.extend(\n            {\n                once: false,\n            },\n            options,\n        );\n\n        // Attempt to factor and collect\n        var step1 = this.factor(options);\n        var step2 = step1.collect(options);\n\n        // Rollback if collect didn't do anything\n        if (step1.equals(step2)) {\n            step2 = this.collect(options);\n        }\n\n        // Attempt to expand and collect\n        var step3 = step2.expand(options);\n        var step4 = step3.collect(options);\n\n        // Rollback if collect didn't do anything\n        if (step3.equals(step4)) {\n            step4 = step2.collect(options);\n        }\n\n        // One round of simplification complete\n        var simplified = step4;\n\n        if (options.once || this.equals(simplified)) {\n            return simplified;\n        } else {\n            return simplified.simplify(options);\n        }\n    },\n\n    // check whether this expression is simplified\n    isSimplified: function () {\n        return this.equals(this.simplify());\n    },\n\n    // return the child nodes of this node\n    exprArgs: function () {\n        return _.filter(this.args(), function (arg) {\n            return arg instanceof Expr;\n        });\n    },\n\n    // return the variables (function and non) within the expression\n    getVars: function (excludeFunc) {\n        return _.uniq(\n            _.flatten(_.invoke(this.exprArgs(), \"getVars\", excludeFunc)),\n        ).sort();\n    },\n\n    getConsts: function () {\n        return _.uniq(_.flatten(_.invoke(this.exprArgs(), \"getConsts\"))).sort();\n    },\n\n    getUnits: function () {\n        return _.flatten(_.invoke(this.exprArgs(), \"getUnits\"));\n    },\n\n    // check whether this expression node is of a particular type\n    is: function (func) {\n        return this instanceof func;\n    },\n\n    // check whether this expression has a particular node type\n    has: function (func) {\n        if (this instanceof func) {\n            return true;\n        }\n        return _.any(this.exprArgs(), function (arg) {\n            return arg.has(func);\n        });\n    },\n\n    // raise this expression to a given exponent\n    // most useful for eventually implementing i^3 = -i, etc.\n    raiseToThe: function (exp) {\n        return new Pow(this, exp);\n    },\n\n    // does this expression have a specific rendering hint?\n    // rendering hints are picked up while parsing, but are lost during transformations\n    isSubtract: function () {\n        return false;\n    },\n    isDivide: function () {\n        return false;\n    },\n    isRoot: function () {\n        return false;\n    },\n\n    // whether this node needs an explicit multiplication sign if following a Num\n    needsExplicitMul: function () {\n        return this.args()[0].needsExplicitMul();\n    },\n\n    // check that the variables in both expressions are the same\n    sameVars: function (other) {\n        var vars1 = this.getVars();\n        var vars2 = other.getVars();\n\n        // the other Expr can have more variables than this one\n        // this lets you multiply equations by other variables\n        var same = function (array1, array2) {\n            return !_.difference(array1, array2).length;\n        };\n\n        var lower = function (array) {\n            return _.uniq(_.invoke(array, \"toLowerCase\")).sort();\n        };\n\n        var equal = same(vars1, vars2);\n        var equalIgnoringCase = same(lower(vars1), lower(vars2));\n\n        return {equal: equal, equalIgnoringCase: equalIgnoringCase};\n    },\n\n    // semantic equality check, call after sameVars() to avoid potential false positives\n    // plug in random numbers for the variables in both expressions\n    // if they both consistently evaluate the same, then they're the same\n    compare: function (other) {\n        // equation comparisons are handled by Eq.compare()\n        if (other instanceof Eq) {\n            return false;\n        }\n\n        var varList = _.union(\n            this.getVars(/* excludeFunc */ true),\n            other.getVars(/* excludeFunc */ true),\n        );\n\n        // If the numbers are large we would like to do a relative comparison\n        // rather than an absolute one, but if they're small enough then an\n        // absolute comparison makes more sense\n        var getDelta = function (num1, num2) {\n            if (Math.abs(num1) < 1 || Math.abs(num2) < 1) {\n                return Math.abs(num1 - num2);\n            } else {\n                return Math.abs(1 - num1 / num2);\n            }\n        };\n\n        var equalNumbers = function (num1, num2) {\n            var delta = getDelta(num1, num2);\n            return (\n                num1 === num2 /* needed if either is +/- Infinity */ ||\n                (isNaN(num1) && isNaN(num2)) ||\n                delta < Math.pow(10, -TOLERANCE)\n            );\n        };\n\n        // if no variables, only need to evaluate once\n        if (!varList.length && !this.has(Unit) && !other.has(Unit)) {\n            return equalNumbers(this.eval(), other.eval());\n        }\n\n        // collect here to avoid sometimes dividing by zero, and sometimes not\n        // it is better to be deterministic, e.g. x/x -> 1\n        // TODO(alex): may want to keep track of assumptions as they're made\n        var expr1 = this.collect();\n        var expr2 = other.collect();\n\n        var unitList1 = this.getUnits();\n        var unitList2 = other.getUnits();\n\n        if (!_.isEqual(unitList1, unitList2)) {\n            return false;\n        }\n\n        // Compare at a set number (currently 12) of points to determine\n        // equality.\n        //\n        // `range` (and `vars`) is the only variable that varies through the\n        // iterations. For each of range = 10, 100, and 1000, each random\n        // variable is picked from (-range, range).\n        //\n        // Note that because there are 12 iterations and three ranges, each\n        // range is checked four times.\n        for (var i = 0; i < ITERATIONS; i++) {\n            var vars = {};\n\n            // One third total iterations each with range 10, 100, and 1000\n            var range = Math.pow(10, 1 + Math.floor((3 * i) / ITERATIONS));\n\n            // Half of the iterations should only use integer values.\n            // This is because expressions like (-2)^x are common but result\n            // in NaN when evaluated in JS with non-integer values of x.\n            // Without this, (-2)^x and (-2)^(x+1) both end up always being NaN\n            // and thus equivalent. With this, the most common failure case is\n            // avoided. However, less common cases such as (-2)^(x+0.1) and\n            // (-2)^(x+1.1) will still both evaluate to NaN and result in a\n            // false positive.\n            //\n            // Note that the above is only true in vanilla JS Number-land,\n            // which has no concept of complex numbers. The solution is simple:\n            // Integrate a library for handling complex numbers.\n            //\n            // TODO(alex): Add support for complex numbers, then remove this.\n            var useFloats = i % 2 === 0;\n\n            _.each(varList, function (v) {\n                vars[v] = useFloats\n                    ? randomFloat(-range, range)\n                    : _.random(-range, range);\n            });\n\n            var equal;\n            if (\n                expr1.has(Func) ||\n                expr2.has(Func) ||\n                expr1.has(Unit) ||\n                expr2.has(Unit)\n            ) {\n                var result1 = expr1.partialEval(vars);\n                var result2 = expr2.partialEval(vars);\n\n                equal = result1.simplify().equals(result2.simplify());\n            } else {\n                var result1 = expr1.eval(vars);\n                var result2 = expr2.eval(vars);\n\n                equal = equalNumbers(result1, result2);\n            }\n\n            if (!equal) {\n                return false;\n            }\n        }\n\n        return true;\n    },\n\n    // evaluate as much of the expression as possible\n    partialEval: function (vars) {\n        if (this instanceof Unit) {\n            return this;\n        } else if (!this.has(Func)) {\n            return new Float(this.eval(vars).toFixed(TOLERANCE)).collect();\n        } else if (this instanceof Func) {\n            return new Func(this.symbol, this.arg.partialEval(vars));\n        } else {\n            return this.recurse(\"partialEval\", vars);\n        }\n    },\n\n    // check that the structure of both expressions is the same\n    // all negative signs are stripped and the expressions are converted to\n    // a canonical commutative form\n    // should only be done after compare() returns true to avoid false positives\n    sameForm: function (other) {\n        return this.strip().equals(other.strip());\n    },\n\n    // returns the GCD of this expression and the given factor\n    findGCD: function (factor) {\n        return this.equals(factor) ? factor : Num.One;\n    },\n\n    // return this expression's denominator\n    getDenominator: function () {\n        return Num.One;\n    },\n\n    // return this expression as a Mul\n    asMul: function () {\n        return new Mul(Num.One, this);\n    },\n\n    // TODO(alex): rename to isDefinitePositive or similar?\n    // return whether this expression is 100% positive\n    isPositive: abstract,\n\n    // TODO(alex): rename to hasNegativeSign or similar?\n    // return whether this expression has a negative sign\n    isNegative: function () {\n        return false;\n    },\n\n    // return a factor of this expression that is 100% positive\n    asPositiveFactor: function () {\n        return this.isPositive() ? this : Num.One;\n    },\n\n    // return a copy of the expression with a new hint set (preserves hints)\n    addHint: function (hint) {\n        if (!hint) {\n            return this;\n        }\n\n        var expr = this.construct(this.args());\n        expr.hints = _.clone(this.hints);\n        expr.hints[hint] = true;\n        return expr;\n    },\n\n    hints: {\n        parens: false,\n    },\n\n    // currently unused!\n    asExpr: function () {\n        return this;\n    },\n\n    // complete parse by performing a few necessary transformations\n    completeParse: function () {\n        return this.recurse(\"completeParse\");\n    },\n\n    abs: abstract,\n\n    negate: function () {\n        return new Mul(Num.Neg, this);\n    },\n});\n\n/* abstract sequence node */\nfunction Seq() {}\nSeq.prototype = new Expr();\n\n_.extend(Seq.prototype, {\n    args: function () {\n        return this.terms;\n    },\n\n    normalize: function () {\n        var terms = _.sortBy(\n            _.invoke(this.terms, \"normalize\"),\n            function (term) {\n                return term.print();\n            },\n        );\n\n        return new this.func(terms);\n    },\n\n    expand: function () {\n        return this.recurse(\"expand\").flatten();\n    },\n\n    // partition the sequence into its numeric and non-numeric parts\n    // makes no guarantees about the validity of either part!\n    partition: function () {\n        var terms = _.groupBy(this.terms, function (term) {\n            return term instanceof Num;\n        });\n\n        // XXX using a boolean as a key just converts it to a string. I don't\n        // think this code was written with that in mind. Probably doesn't\n        // matter except for readability.\n        var numbers = terms[true] || [];\n        var others = terms[false] || [];\n\n        return [new this.func(numbers), new this.func(others)];\n    },\n\n    // ensure that sequences have 2+ terms and no nested sequences of the same type\n    // this is a shallow flattening and will return a non-Seq if terms.length <= 1\n    flatten: function () {\n        var type = this;\n        var terms = _.reject(this.terms, function (term) {\n            return term.equals(type.identity);\n        });\n\n        if (terms.length === 0) {\n            return type.identity;\n        }\n        if (terms.length === 1) {\n            return terms[0];\n        }\n\n        var grouped = _.groupBy(terms, function (term) {\n            return term instanceof type.func;\n        });\n\n        // same contains the children which are Seqs of the same type as this Seq\n        var same = grouped[true] || [];\n        var others = grouped[false] || [];\n\n        var flattened = others.concat(\n            _.flatten(_.pluck(same, \"terms\"), /* shallow: */ true),\n        );\n        return new type.func(flattened);\n    },\n\n    // the identity associated with the sequence\n    identity: undefined,\n\n    // reduce a numeric sequence to a Num\n    reduce: abstract,\n\n    isPositive: function () {\n        var terms = _.invoke(this.terms, \"collect\");\n        return _.all(_.invoke(terms, \"isPositive\"));\n    },\n\n    // return a new Seq with a given term replaced by a different term\n    // (or array of terms). given term can be passed directly, or by index\n    // if no new term is provided, the old one is simply removed\n    replace: function (oldTerm, newTerm) {\n        var index;\n\n        if (oldTerm instanceof Expr) {\n            index = _.indexOf(this.terms, oldTerm);\n        } else {\n            index = oldTerm;\n        }\n\n        var newTerms = [];\n        if (_.isArray(newTerm)) {\n            newTerms = newTerm;\n        } else if (newTerm) {\n            newTerms = [newTerm];\n        }\n\n        var terms = this.terms\n            .slice(0, index)\n            .concat(newTerms)\n            .concat(this.terms.slice(index + 1));\n\n        return new this.func(terms);\n    },\n\n    // syntactic sugar for replace()\n    remove: function (term) {\n        return this.replace(term);\n    },\n\n    getDenominator: function () {\n        // TODO(alex): find and return LCM\n        return new Mul(_.invoke(this.terms, \"getDenominator\")).flatten();\n    },\n});\n\n/* sequence of additive terms */\nexport function Add() {\n    if (arguments.length === 1) {\n        this.terms = arguments[0];\n    } else {\n        this.terms = _.toArray(arguments);\n    }\n}\nAdd.prototype = new Seq();\n\n_.extend(Add.prototype, {\n    func: Add,\n\n    eval: function (vars, options) {\n        return _.reduce(\n            this.terms,\n            function (memo, term) {\n                return memo + term.eval(vars, options);\n            },\n            0,\n        );\n    },\n\n    codegen: function () {\n        return (\n            _.map(this.terms, function (term) {\n                return \"(\" + term.codegen() + \")\";\n            }).join(\" + \") || \"0\"\n        );\n    },\n\n    print: function () {\n        return _.invoke(this.terms, \"print\").join(\"+\");\n    },\n\n    tex: function () {\n        var tex = \"\";\n\n        _.each(this.terms, function (term) {\n            if (!tex || term.isSubtract()) {\n                tex += term.tex();\n            } else {\n                tex += \"+\" + term.tex();\n            }\n        });\n\n        return tex;\n    },\n\n    collect: function (options) {\n        var terms = _.invoke(this.terms, \"collect\", options);\n\n        // [Expr expr, Num coefficient]\n        var pairs = [];\n\n        _.each(terms, function (term) {\n            if (term instanceof Mul) {\n                var muls = term.partition();\n                pairs.push([muls[1].flatten(), muls[0].reduce(options)]);\n            } else if (term instanceof Num) {\n                pairs.push([Num.One, term]);\n            } else {\n                pairs.push([term, Num.One]);\n            }\n        });\n\n        // { (Expr expr).print(): [[Expr expr, Num coefficient]] }\n        var grouped = _.groupBy(pairs, function (pair) {\n            return pair[0].normalize().print();\n        });\n\n        var collected = _.compact(\n            _.map(grouped, function (pairs) {\n                var expr = pairs[0][0];\n                var sum = new Add(_.zip.apply(_, pairs)[1]);\n                var coefficient = sum.reduce(options);\n                return new Mul(coefficient, expr).collect(options);\n            }),\n        );\n\n        // TODO(alex): use the Pythagorean identity here\n        // e.g. x*sin^2(y) + x*cos^2(y) -> x\n\n        return new Add(collected).flatten();\n    },\n\n    // naively factor out anything that is common to all terms\n    // if options.keepNegative is specified, won't factor out a common -1\n    factor: function (options) {\n        options = _.extend(\n            {\n                keepNegative: false,\n            },\n            options,\n        );\n\n        var terms = _.invoke(this.terms, \"collect\");\n        var factors;\n\n        if (terms[0] instanceof Mul) {\n            factors = terms[0].terms;\n        } else {\n            factors = [terms[0]];\n        }\n\n        _.each(_.rest(this.terms), function (term) {\n            factors = _.map(factors, function (factor) {\n                return term.findGCD(factor);\n            });\n        });\n\n        if (!options.keepNegative && this.isNegative()) {\n            factors.push(Num.Neg);\n        }\n\n        factors = new Mul(factors).flatten().collect();\n\n        var remainder = _.map(terms, function (term) {\n            return Mul.handleDivide(term, factors).simplify();\n        });\n        remainder = new Add(remainder).flatten();\n\n        return Mul.createOrAppend(factors, remainder).flatten();\n    },\n\n    reduce: function (options) {\n        return _.reduce(\n            this.terms,\n            function (memo, term) {\n                return memo.add(term, options);\n            },\n            this.identity,\n        );\n    },\n\n    needsExplicitMul: function () {\n        return false;\n    },\n\n    isNegative: function () {\n        var terms = _.invoke(this.terms, \"collect\");\n        return _.all(_.invoke(terms, \"isNegative\"));\n    },\n\n    negate: function () {\n        return new Add(_.invoke(this.terms, \"negate\"));\n    },\n});\n\n/* sequence of multiplicative terms */\nexport function Mul() {\n    if (arguments.length === 1) {\n        this.terms = arguments[0];\n    } else {\n        this.terms = _.toArray(arguments);\n    }\n}\nMul.prototype = new Seq();\n\n_.extend(Mul.prototype, {\n    func: Mul,\n\n    eval: function (vars, options) {\n        return _.reduce(\n            this.terms,\n            function (memo, term) {\n                return memo * term.eval(vars, options);\n            },\n            1,\n        );\n    },\n\n    codegen: function () {\n        return (\n            _.map(this.terms, function (term) {\n                return \"(\" + term.codegen() + \")\";\n            }).join(\" * \") || \"0\"\n        );\n    },\n\n    print: function () {\n        return _.map(this.terms, function (term) {\n            return term instanceof Add\n                ? \"(\" + term.print() + \")\"\n                : term.print();\n        }).join(\"*\");\n    },\n\n    getUnits: function () {\n        var tmUnits = _(this.terms)\n            .chain()\n            .map(function (term) {\n                return term.getUnits();\n            })\n            .flatten()\n            .value();\n\n        tmUnits.sort((a, b) => a.unit.localeCompare(b.unit));\n\n        return tmUnits;\n    },\n\n    // since we don't care about commutativity, we can render a Mul any way we choose\n    // so we follow convention: first any negatives, then any numbers, then everything else\n    tex: function () {\n        var cdot = \" \\\\cdot \";\n\n        var terms = _.groupBy(this.terms, function (term) {\n            if (term.isDivide()) {\n                return \"inverse\";\n            } else if (term instanceof Num) {\n                return \"number\";\n            } else {\n                return \"other\";\n            }\n        });\n\n        var inverses = terms.inverse || [];\n        var numbers = terms.number || [];\n        var others = terms.other || [];\n\n        var negatives = \"\";\n        var numerator;\n\n        // check all the numbers to see if there is a rational we can extract,\n        // since we would like 1/2x/y to come out as \\frac{1}{2}\\frac{x}{y},\n        // and not \\frac{1x}{2y}.\n        for (var i = 0; i < numbers.length; i++) {\n            var isRational =\n                numbers[i] instanceof Rational && !(numbers[i] instanceof Int);\n            if (isRational && others.length > 0 && inverses.length > 0) {\n                var withThisRemoved = numbers.slice();\n                withThisRemoved.splice(i, 1);\n                var newTerms = withThisRemoved.concat(inverses).concat(others);\n                return numbers[i].tex() + new Mul(newTerms).tex();\n            }\n        }\n\n        numbers = _.compact(\n            _.map(numbers, function (term) {\n                var hasDenom =\n                    term instanceof Rational && !(term instanceof Int);\n                var shouldPushDown =\n                    !term.hints.fraction || inverses.length > 0;\n                if (hasDenom && shouldPushDown) {\n                    // e.g. 3x/4 -> 3/4*x (internally) -> 3x/4 (rendered)\n                    inverses.push(new Pow(new Int(term.d), Num.Div));\n                    var number = new Int(term.n);\n                    number.hints = term.hints;\n                    return _.any(term.hints) ? number : null;\n                } else {\n                    return term;\n                }\n            }),\n        );\n\n        if (numbers.length === 0 && others.length === 1) {\n            // e.g. (x+y)/z -> \\frac{x+y}{z}\n            numerator = others[0].tex();\n        } else {\n            var tex = \"\";\n\n            _.each(numbers, function (term) {\n                if (term.hints.subtract && term.hints.entered) {\n                    negatives += \"-\";\n                    tex += (tex ? cdot : \"\") + term.abs().tex();\n                } else if (\n                    term instanceof Int &&\n                    term.n === -1 &&\n                    (term.hints.negate || term.hints.subtract)\n                ) {\n                    // e.g. -1*-1 -> --1\n                    // e.g. -1*x -> -x\n                    negatives += \"-\";\n                } else {\n                    // e.g. 2*3 -> 2(dot)3\n                    tex += (tex ? cdot : \"\") + term.tex();\n                }\n            });\n\n            _.each(others, function (term) {\n                if (term.needsExplicitMul()) {\n                    // e.g. 2*2^3 -> 2(dot)2^3\n                    tex += (tex ? cdot : \"\") + term.tex();\n                } else if (term instanceof Add) {\n                    // e.g. (a+b)*c -> (a+b)c\n                    tex += \"(\" + term.tex() + \")\";\n                } else {\n                    // e.g. a*b*c -> abc\n                    tex += term.tex();\n                }\n            });\n\n            numerator = tex ? tex : \"1\";\n        }\n\n        if (!inverses.length) {\n            return negatives + numerator;\n        } else {\n            var denominator = new Mul(_.invoke(inverses, \"asDivide\"))\n                .flatten()\n                .tex();\n            return negatives + \"\\\\frac{\" + numerator + \"}{\" + denominator + \"}\";\n        }\n    },\n\n    strip: function () {\n        var terms = _.map(this.terms, function (term) {\n            return term instanceof Num ? term.abs() : term.strip();\n        });\n        return new Mul(terms).flatten();\n    },\n\n    // expand numerator and denominator separately\n    expand: function () {\n        var isAdd = function (term) {\n            return term instanceof Add;\n        };\n\n        var isInverse = function (term) {\n            return term instanceof Pow && term.exp.isNegative();\n        };\n\n        var isInverseAdd = function (term) {\n            return isInverse(term) && isAdd(term.base);\n        };\n\n        var mul = this.recurse(\"expand\").flatten();\n\n        var hasAdd = _.any(mul.terms, isAdd);\n        var hasInverseAdd = _.any(mul.terms, isInverseAdd);\n\n        if (!(hasAdd || hasInverseAdd)) {\n            return mul;\n        }\n\n        var terms = _.groupBy(mul.terms, isInverse);\n        var normals = terms[false] || [];\n        var inverses = terms[true] || [];\n\n        if (hasAdd) {\n            var grouped = _.groupBy(normals, isAdd);\n            var adds = grouped[true] || [];\n            var others = grouped[false] || [];\n\n            // loop over each additive sequence\n            var expanded = _.reduce(\n                adds,\n                function (expanded, add) {\n                    // loop over each expanded array of terms\n                    return _.reduce(\n                        expanded,\n                        function (temp, array) {\n                            // loop over each additive sequence's terms\n                            return temp.concat(\n                                _.map(add.terms, function (term) {\n                                    return array.concat(term);\n                                }),\n                            );\n                        },\n                        [],\n                    );\n                },\n                [[]],\n            );\n\n            // join each fully expanded array of factors with remaining multiplicative factors\n            var muls = _.map(expanded, function (array) {\n                return new Mul(others.concat(array)).flatten();\n            });\n\n            normals = [new Add(muls)];\n        }\n\n        if (hasInverseAdd) {\n            var denominator = new Mul(\n                _.invoke(inverses, \"getDenominator\"),\n            ).flatten();\n            inverses = [new Pow(denominator.expand(), Num.Div)];\n        }\n\n        return new Mul(normals.concat(inverses)).flatten();\n    },\n\n    factor: function (options) {\n        var factored = this.recurse(\"factor\", options).flatten();\n        if (!(factored instanceof Mul)) {\n            return factored;\n        }\n\n        // Combine any factored out Rationals into one, but don't collect\n        var grouped = _.groupBy(factored.terms, function (term) {\n            return term instanceof Rational;\n        });\n\n        // Could also accomplish this by passing a new option\n        // e.g. return  memo.mul(term, {autocollect: false});\n        // TODO(alex): Decide whether this is a good use of options or not\n        var rational = _.reduce(\n            grouped[true],\n            function (memo, term) {\n                return {n: memo.n * term.n, d: memo.d * term.d};\n            },\n            {n: 1, d: 1},\n        );\n\n        if (rational.d === 1) {\n            rational = new Int(rational.n);\n        } else {\n            rational = new Rational(rational.n, rational.d);\n        }\n\n        return new Mul((grouped[false] || []).concat(rational)).flatten();\n    },\n\n    collect: function (options) {\n        var partitioned = this.recurse(\"collect\", options).partition();\n        var number = partitioned[0].reduce(options);\n\n        // e.g. 0*x -> 0\n        if (number.eval() === 0) {\n            return Num.Zero;\n        }\n\n        var others = partitioned[1].flatten();\n\n        // e.g. 2*2 -> 4\n        // e.g. 2*2*x -> 4*x\n        if (!(others instanceof Mul)) {\n            return new Mul(number, others).flatten();\n        }\n\n        others = others.terms;\n\n        // [Expr base, Expr exp]\n        var pairs = [];\n\n        _.each(others, function (term) {\n            if (term instanceof Pow) {\n                pairs.push([term.base, term.exp]);\n            } else {\n                pairs.push([term, Num.One]);\n            }\n        });\n\n        // {(Expr base).print(): [[Expr base, Expr exp]]}\n        var grouped = _.groupBy(pairs, function (pair) {\n            return pair[0].normalize().print();\n        });\n\n        // [[Expr base, Expr exp]]\n        var summed = _.compact(\n            _.map(grouped, function (pairs) {\n                var base = pairs[0][0];\n                var sum = new Add(_.zip.apply(_, pairs)[1]);\n                var exp = sum.collect(options);\n\n                if (exp instanceof Num && exp.eval() === 0) {\n                    return null;\n                } else {\n                    return [base, exp];\n                }\n            }),\n        );\n\n        // XXX `pairs` is shadowed four or five times in this function\n        var pairs = _.groupBy(summed, function (pair) {\n            if (pair[0] instanceof Trig && pair[0].isBasic()) {\n                return \"trig\";\n            } else if (pair[0] instanceof Log) {\n                return \"log\";\n            } else {\n                return \"expr\";\n            }\n        });\n        var trigs = pairs.trig || [];\n        var logs = pairs.log || [];\n        var exprs = pairs.expr || [];\n\n        if (trigs.length > 1) {\n            // combine sines and cosines into other trig functions\n\n            // {Trig.arg.print(): [[Trig base, Expr exp]]}\n            var byArg = _.groupBy(trigs, function (pair) {\n                return pair[0].arg.normalize().print();\n            });\n\n            trigs = [];\n            _.each(byArg, function (pairs) {\n                var arg = pairs[0][0].arg;\n\n                // {Trig.type: Expr exp}\n                var funcs = {sin: Num.Zero, cos: Num.Zero};\n                _.each(pairs, function (pair) {\n                    funcs[pair[0].type] = pair[1];\n                });\n\n                if (\n                    Mul.handleNegative(funcs.sin)\n                        .collect(options)\n                        .equals(funcs.cos)\n                ) {\n                    // e.g. sin^x(y)/cos^x(y) -> tan^x(y)\n                    if (funcs.cos.isNegative()) {\n                        funcs = {tan: funcs.sin};\n                    } else {\n                        funcs = {cot: funcs.cos};\n                    }\n                }\n\n                // TODO(alex): combine even if exponents not a perfect match\n                // TODO(alex): transform 1/sin and 1/cos into csc and sec\n\n                _.each(funcs, function (exp, type) {\n                    trigs.push([new Trig(type, arg), exp]);\n                });\n            });\n        }\n\n        if (logs.length > 1) {\n            // combine logs with the same base\n\n            // {Log.base.print(): [[Log base, Expr exp]]}\n            var byBase = _.groupBy(logs, function (pair) {\n                return pair[0].base.normalize().print();\n            });\n\n            logs = [];\n\n            _.each(byBase, function (pairs) {\n                // only combine two logs of the same base, otherwise commutative\n                // differences result in different equally valid output\n                // e.g. ln(x)/ln(z)*ln(y) -> log_z(x)*ln(y)\n                // e.g. ln(x)*ln(y)/ln(z) -> ln(x)*log_z(y)\n                if (\n                    pairs.length === 2 &&\n                    Mul.handleNegative(pairs[0][1])\n                        .collect(options)\n                        .equals(pairs[1][1])\n                ) {\n                    // e.g. ln(x)^y/ln(b)^y -> log_b(x)^y\n                    if (pairs[0][1].isNegative()) {\n                        logs.push([\n                            new Log(pairs[0][0].power, pairs[1][0].power),\n                            pairs[1][1],\n                        ]);\n                    } else {\n                        logs.push([\n                            new Log(pairs[1][0].power, pairs[0][0].power),\n                            pairs[0][1],\n                        ]);\n                    }\n                } else {\n                    logs = logs.concat(pairs);\n                }\n            });\n\n            // TODO(alex): combine if all inverses are the same e.g. ln(y)*ln(z)/ln(x)/ln(x)\n        }\n\n        pairs = trigs.concat(logs).concat(exprs);\n\n        var collected = _.map(pairs, function (pair) {\n            return new Pow(pair[0], pair[1]).collect(options);\n        });\n\n        return new Mul([number].concat(collected)).flatten();\n    },\n\n    isSubtract: function () {\n        return _.any(this.terms, function (term) {\n            return term instanceof Num && term.hints.subtract;\n        });\n    },\n\n    // factor a single -1 in to the Mul\n    // combine with a Num if all Nums are positive, else add as a term\n    factorIn: function (hint) {\n        var partitioned = this.partition();\n        var numbers = partitioned[0].terms;\n        var fold =\n            numbers.length &&\n            _.all(numbers, function (num) {\n                return num.n > 0;\n            });\n\n        if (fold) {\n            // e.g. - x*2*3 -> x*-2*3\n            var num = numbers[0].negate();\n            num.hints = numbers[0].hints;\n            return this.replace(numbers[0], num.addHint(hint));\n        } else {\n            // e.g. - x*y -> -1*x*y\n            // e.g. - x*-2 -> -1*x*-2\n            return new Mul([Num.negativeOne(hint)].concat(this.terms));\n        }\n    },\n\n    // factor out a single hinted -1 (assume it is the division hint)\n    // TODO(alex): make more general or rename to be more specific\n    factorOut: function () {\n        var factored = false;\n        var terms = _.compact(\n            _.map(this.terms, function (term, i, list) {\n                if (!factored && term instanceof Num && term.hints.divide) {\n                    factored = true;\n                    return term.n !== -1 ? term.negate() : null;\n                } else {\n                    return term;\n                }\n            }),\n        );\n\n        if (terms.length === 1) {\n            return terms[0];\n        } else {\n            return new Mul(terms);\n        }\n    },\n\n    reduce: function (options) {\n        return _.reduce(\n            this.terms,\n            function (memo, term) {\n                return memo.mul(term, options);\n            },\n            this.identity,\n        );\n    },\n\n    findGCD: function (factor) {\n        return new Mul(_.invoke(this.terms, \"findGCD\", factor)).flatten();\n    },\n\n    asMul: function () {\n        return this;\n    },\n\n    asPositiveFactor: function () {\n        if (this.isPositive()) {\n            return this;\n        } else {\n            var terms = _.invoke(this.collect().terms, \"asPositiveFactor\");\n            return new Mul(terms).flatten();\n        }\n    },\n\n    isNegative: function () {\n        return _.any(_.invoke(this.collect().terms, \"isNegative\"));\n    },\n\n    fold: function () {\n        return Mul.fold(this);\n    },\n\n    negate: function () {\n        var isNum = function (expr) {\n            return expr instanceof Num;\n        };\n        if (_.any(this.terms, isNum)) {\n            var num = _.find(this.terms, isNum);\n            return this.replace(num, num.negate());\n        } else {\n            return new Mul([Num.Neg].concat(this.terms));\n        }\n    },\n});\n\n// static methods for the sequence types\n_.each([Add, Mul], function (type) {\n    _.extend(type, {\n        // create a new sequence unless left is already one (returns a copy)\n        createOrAppend: function (left, right) {\n            if (left instanceof type) {\n                return new type(left.terms.concat(right));\n            } else {\n                return new type(left, right);\n            }\n        },\n    });\n});\n\n_.extend(Mul, {\n    // negative signs should be folded into numbers whenever possible\n    // never fold into a Num that's already negative or a Mul that has a negative Num\n    // an optional hint is kept track of to properly render user input\n    // an empty hint means negation\n    handleNegative: function (expr, hint) {\n        if (expr instanceof Num && expr.n > 0) {\n            // e.g. - 2 -> -2\n            var negated = expr.negate();\n            // TODO(alex): rework hint system so that this isn't necessary\n            negated.hints = expr.hints;\n            return negated.addHint(hint);\n        } else if (expr instanceof Mul) {\n            // e.g. - x*2*3 -> x*-2*3\n            // e.g. - x*y -> -1*x*y\n            // e.g. - x*-2 -> -1*x*-2\n            return expr.factorIn(hint);\n        } else {\n            // e.g. - x -> -1*x\n            return new Mul(Num.negativeOne(hint), expr);\n        }\n    },\n\n    // division can create either a Rational or a Mul\n    handleDivide: function (left, right) {\n        // dividing by a Mul is the same as repeated division by its terms\n        if (right instanceof Mul) {\n            var first = Mul.handleDivide(left, right.terms[0]);\n            var rest = new Mul(_.rest(right.terms)).flatten();\n            return Mul.handleDivide(first, rest);\n        }\n\n        var isInt = function (expr) {\n            return expr instanceof Int;\n        };\n        var isRational = function (expr) {\n            return expr instanceof Rational;\n        };\n\n        // for simplification purposes, fold Ints into Rationals if possible\n        // e.g. 3x / 4 -> 3/4 * x (will still render as 3x/4)\n        if (isInt(right) && left instanceof Mul && _.any(left.terms, isInt)) {\n            // search from the right\n            var reversed = left.terms.slice().reverse();\n            var num = _.find(reversed, isRational);\n\n            if (!isInt(num)) {\n                return new Mul(\n                    left.terms.concat([\n                        new Rational(1, right.n).addHint(\"fraction\"),\n                    ]),\n                );\n            }\n\n            var rational = new Rational(num.n, right.n);\n            rational.hints = num.hints;\n\n            // in the case of something like 1/3 * 6/8, we want the\n            // 6/8 to be considered a fraction, not just a division\n            if (num === reversed[0]) {\n                rational = rational.addHint(\"fraction\");\n            }\n\n            var result;\n            if (num.n < 0 && right.n < 0) {\n                rational.d = -rational.d;\n                return left.replace(num, [Num.Neg, rational]);\n            } else {\n                return left.replace(num, rational);\n            }\n        }\n\n        var divide = function (a, b) {\n            if (b instanceof Int) {\n                if (a instanceof Int) {\n                    if (a.n < 0 && b.n < 0) {\n                        // e.g. -2 / -3 -> -1*-2/3\n                        return [\n                            Num.Neg,\n                            new Rational(a.n, -b.n).addHint(\"fraction\"),\n                        ];\n                    } else {\n                        // e.g. 2 / 3 -> 2/3\n                        // e.g. -2 / 3 -> -2/3\n                        // e.g. 2 / -3 -> -2/3\n                        return [new Rational(a.n, b.n).addHint(\"fraction\")];\n                    }\n                } else {\n                    // e.g. x / 3 -> x*1/3\n                    // e.g. x / -3 -> x*-1/3\n                    var inverse = new Rational(1, b.eval());\n                    if (b.eval() < 0) {\n                        return [a, inverse.addHint(\"negate\")];\n                    } else {\n                        return [a, inverse];\n                    }\n                }\n            } else {\n                var pow;\n\n                if (b instanceof Trig && b.exp) {\n                    // e.g. sin^2(x) -> sin(x)^2\n                    var exp = b.exp;\n                    b.exp = undefined;\n                    b = new Pow(b, exp);\n                }\n\n                if (b instanceof Pow) {\n                    // e.g. (x^2) ^ -1 -> x^-2\n                    // e.g. (x^y) ^ -1 -> x^(-1*y)\n                    // e.g. (x^(yz)) ^ -1 -> x^(-1*y*z)\n                    pow = new Pow(b.base, Mul.handleNegative(b.exp, \"divide\"));\n                } else {\n                    // e.g. x ^ -1 -> x^-1\n                    pow = new Pow(b, Num.Div);\n                }\n\n                if (a instanceof Int && a.n === 1) {\n                    // e.g. 1 / x -> x^-1\n                    return [pow];\n                } else {\n                    // e.g. 2 / x -> 2*x^-1\n                    return [a, pow];\n                }\n            }\n        };\n\n        if (left instanceof Mul) {\n            var divided = divide(_.last(left.terms), right);\n            return new Mul(_.initial(left.terms).concat(divided));\n        } else {\n            var divided = divide(left, right);\n            return new Mul(divided).flatten();\n        }\n    },\n\n    // fold negative signs into numbers if possible\n    // negative signs are not the same as multiplying by negative one!\n    // e.g. -x      ->  -1*x    simplified\n    // e.g. -2*x    ->  -2*x    simplified\n    // e.g. -x*2    ->  -1*x*2  not simplified -> x*-2 simplified\n    // e.g. -1*x*2  ->  -1*x*2  not simplified\n\n    // also fold multiplicative terms into open Trig and Log nodes\n    // e.g. (sin x)*x -> sin(x)*x\n    // e.g. sin(x)*x -> sin(x)*x\n    // e.g. sin(x)*(x) -> sin(x)*x\n    // e.g. sin(x)*sin(y) -> sin(x)*sin(y)\n    fold: function (expr) {\n        if (expr instanceof Mul) {\n            // assuming that this will be second to last\n            var trigLog = _.find(_.initial(expr.terms), function (term) {\n                return (\n                    (term instanceof Trig || term instanceof Log) &&\n                    term.hints.open\n                );\n            });\n            var index = _.indexOf(expr.terms, trigLog);\n\n            if (trigLog) {\n                var last = _.last(expr.terms);\n                if (\n                    trigLog.hints.parens ||\n                    last.hints.parens ||\n                    last.has(Trig) ||\n                    last.has(Log)\n                ) {\n                    trigLog.hints.open = false;\n                } else {\n                    var newTrigLog;\n                    if (trigLog instanceof Trig) {\n                        newTrigLog = Trig.create(\n                            [trigLog.type, trigLog.exp],\n                            Mul.createOrAppend(trigLog.arg, last).fold(),\n                        );\n                    } else {\n                        newTrigLog = Log.create(\n                            trigLog.base,\n                            Mul.createOrAppend(trigLog.power, last).fold(),\n                        );\n                    }\n\n                    if (index === 0) {\n                        return newTrigLog;\n                    } else {\n                        return new Mul(\n                            expr.terms.slice(0, index).concat(newTrigLog),\n                        ).fold();\n                    }\n                }\n            }\n\n            var partitioned = expr.partition();\n            var numbers = partitioned[0].terms;\n\n            var pos = function (num) {\n                return num.n > 0;\n            };\n            var neg = function (num) {\n                return num.n === -1 && num.hints.negate;\n            };\n            var posOrNeg = function (num) {\n                return pos(num) || neg(num);\n            };\n\n            if (\n                numbers.length > 1 &&\n                _.some(numbers, neg) &&\n                _.some(numbers, pos) &&\n                _.every(numbers, posOrNeg)\n            ) {\n                var firstNeg = _.indexOf(expr.terms, _.find(expr.terms, neg));\n                var firstNum = _.indexOf(expr.terms, _.find(expr.terms, pos));\n\n                // e.g. -x*2 -> x*-2\n                if (firstNeg < firstNum) {\n                    return expr\n                        .replace(firstNum, expr.terms[firstNum].negate())\n                        .remove(firstNeg);\n                }\n            }\n        }\n\n        // in all other cases, make no change\n        return expr;\n    },\n});\n\n/* exponentiation */\nexport function Pow(base, exp) {\n    this.base = base;\n    this.exp = exp;\n}\nPow.prototype = new Expr();\n\n_.extend(Pow.prototype, {\n    func: Pow,\n    args: function () {\n        return [this.base, this.exp];\n    },\n\n    eval: function (vars, options) {\n        var evaledBase = this.base.eval(vars, options);\n        var evaledExp = this.exp.eval(vars, options);\n\n        // Math.pow unequivocally returns NaN when provided with both a\n        // negative base and a fractional exponent. However, in some cases, we\n        // know that our exponent is actually valid for use with negative\n        // bases (e.g., (-5)^(1/3)).\n        //\n        // Here, we explicitly check for such cases. We really only handle a\n        // limited subset (by requiring that the exponent is rational with an\n        // odd denominator), but it's still useful.\n        //   See: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/pow\n        if (evaledBase < 0) {\n            var simplifiedExp = this.exp.simplify();\n\n            // If Float, convert to a Rational to enable the logic below\n            if (simplifiedExp instanceof Float) {\n                var num = simplifiedExp.n;\n                var decimals = (num - num.toFixed()).toString().length - 2;\n                var denominator = Math.pow(10, decimals);\n                var rationalExp = new Rational(num * denominator, denominator);\n                simplifiedExp = rationalExp.simplify();\n            }\n            if (simplifiedExp instanceof Rational) {\n                var oddDenominator = Math.abs(simplifiedExp.d) % 2 === 1;\n                if (oddDenominator) {\n                    var oddNumerator = Math.abs(simplifiedExp.n) % 2 === 1;\n                    var sign = oddNumerator ? -1 : 1;\n                    return sign * Math.pow(-1 * evaledBase, evaledExp);\n                }\n            }\n        }\n        return Math.pow(evaledBase, evaledExp);\n    },\n\n    getUnits: function () {\n        return this.base.getUnits().map(\n            function (unit) {\n                return {\n                    unit: unit.unit,\n                    pow: unit.pow * this.exp.n,\n                };\n            }.bind(this),\n        );\n    },\n\n    codegen: function () {\n        return (\n            \"Math.pow(\" + this.base.codegen() + \", \" + this.exp.codegen() + \")\"\n        );\n    },\n\n    print: function () {\n        var base = this.base.print();\n        if (this.base instanceof Seq || this.base instanceof Pow) {\n            base = \"(\" + base + \")\";\n        }\n        return base + \"^(\" + this.exp.print() + \")\";\n    },\n\n    tex: function () {\n        if (this.isDivide()) {\n            // e.g. x ^ -1 w/hint -> 1/x\n            return \"\\\\frac{1}{\" + this.asDivide().tex() + \"}\";\n        } else if (this.isRoot()) {\n            if (this.exp.n !== 1) {\n                error(\n                    \"Node marked with hint 'root' does not have exponent \" +\n                        \"of form 1/x.\",\n                );\n            }\n\n            if (this.exp.d === 2) {\n                // e.g. x ^ 1/2 w/hint -> sqrt{x}\n                return \"\\\\sqrt{\" + this.base.tex() + \"}\";\n            } else {\n                // e.g. x ^ 1/y w/hint -> sqrt[y]{x}\n                return \"\\\\sqrt[\" + this.exp.d + \"]{\" + this.base.tex() + \"}\";\n            }\n        } else if (\n            this.base instanceof Trig &&\n            !this.base.isInverse() &&\n            this.exp instanceof Num &&\n            this.exp.isSimple() &&\n            this.exp.eval() >= 0\n        ) {\n            // e.g sin(x) ^ 2 -> sin^2(x)\n            var split = this.base.tex({split: true});\n            return split[0] + \"^{\" + this.exp.tex() + \"}\" + split[1];\n        } else {\n            // e.g. x ^ y -> x^y\n            var base = this.base.tex();\n            if (\n                this.base instanceof Seq ||\n                this.base instanceof Pow ||\n                (this.base instanceof Num && !this.base.isSimple())\n            ) {\n                // e.g. a+b ^ c -> (a+b)^c\n                base = \"(\" + base + \")\";\n            } else if (this.base instanceof Trig || this.base instanceof Log) {\n                // e.g. ln(x) ^ 2 -> [ln(x)]^2\n                base = \"[\" + base + \"]\";\n            }\n            return base + \"^{\" + this.exp.tex() + \"}\";\n        }\n    },\n\n    needsExplicitMul: function () {\n        return this.isRoot() ? false : this.base.needsExplicitMul();\n    },\n\n    expand: function () {\n        var pow = this.recurse(\"expand\");\n\n        if (pow.base instanceof Mul) {\n            // e.g. (ab)^c -> a^c*b^c\n\n            var terms = _.map(pow.base.terms, function (term) {\n                return new Pow(term, pow.exp);\n            });\n\n            return new Mul(terms).expand();\n        } else if (\n            pow.base instanceof Add &&\n            pow.exp instanceof Int &&\n            pow.exp.abs().eval() > 1\n        ) {\n            // e.g. (a+b)^2 -> a*a+a*b+a*b+b*b\n            // e.g. (a+b)^-2 -> (a*a+a*b+a*b+b*b)^-1\n\n            var positive = pow.exp.eval() > 0;\n            var n = pow.exp.abs().eval();\n\n            var signed = function (mul) {\n                return positive ? mul : new Pow(mul, Num.Div);\n            };\n\n            // compute and cache powers of 2 up to n\n            var cache = {1: pow.base};\n            for (var i = 2; i <= n; i *= 2) {\n                var mul = new Mul(cache[i / 2], cache[i / 2]);\n                cache[i] = mul.expand().collect();\n            }\n\n            // if n is a power of 2, you're done!\n            if (_.has(cache, n)) {\n                return signed(cache[n]);\n            }\n\n            // otherwise decompose n into powers of 2 ...\n            var indices = _.map(\n                n.toString(2).split(\"\"),\n                function (str, i, list) {\n                    return Number(str) * Math.pow(2, list.length - i - 1);\n                },\n            );\n            indices = _.without(indices, 0);\n\n            // ... then combine\n            var mul = new Mul(_.pick(cache, indices)).expand().collect();\n            return signed(mul);\n        } else if (pow.exp instanceof Add) {\n            // DEFINITELY want behind super-simplify() flag\n            // e.g. x^(a+b) -> x^a*x^b\n\n            var terms = _.map(pow.exp.terms, function (term) {\n                return new Pow(pow.base, term).expand();\n            });\n\n            return new Mul(terms).expand();\n        } else {\n            return pow;\n        }\n    },\n\n    factor: function () {\n        var pow = this.recurse(\"factor\");\n        if (pow.base instanceof Mul) {\n            var terms = _.map(pow.base.terms, function (term) {\n                if (term instanceof Int && pow.exp.equals(Num.Div)) {\n                    // Anything that can be a Rational should be a Rational\n                    // e.g. 2^(-1) -> 1/2\n                    return new Rational(1, term.n);\n                } else {\n                    return new Pow(term, pow.exp);\n                }\n            });\n            return new Mul(terms);\n        } else {\n            return pow;\n        }\n    },\n\n    collect: function (options) {\n        if (this.base instanceof Pow) {\n            // collect this first to avoid having to deal with float precision\n            // e.g. sqrt(2)^2 -> 2, not 2.0000000000000004\n            // e.g. (x^y)^z -> x^(yz)\n            var base = this.base.base;\n            var exp = Mul.createOrAppend(this.base.exp, this.exp);\n            return new Pow(base, exp).collect(options);\n        }\n\n        var pow = this.recurse(\"collect\", options);\n\n        var isSimilarLog = function (term) {\n            return term instanceof Log && term.base.equals(pow.base);\n        };\n\n        if (pow.exp instanceof Num && pow.exp.eval() === 0) {\n            // e.g. x^0 -> 1\n            return Num.One;\n        } else if (pow.exp instanceof Num && pow.exp.eval() === 1) {\n            // e.g. x^1 -> x\n            return pow.base;\n        } else if (isSimilarLog(pow.exp)) {\n            // e.g. b^(log_b(x)) -> x\n            return pow.exp.power;\n        } else if (\n            pow.exp instanceof Mul &&\n            _.any(pow.exp.terms, isSimilarLog)\n        ) {\n            // e.g. b^(2*y*log_b(x)) -> x^(2*y)\n            var log = _.find(pow.exp.terms, isSimilarLog);\n            var base = log.power;\n            var exp = pow.exp.remove(log).flatten();\n            return new Pow(base, exp).collect(options);\n        } else if (pow.base instanceof Num && pow.exp instanceof Num) {\n            // TODO(alex): Consider encapsualting this logic (and similar logic\n            // elsewhere) into a separate Decimal class for user-entered floats\n            if (options && options.preciseFloats) {\n                // Avoid creating an imprecise float\n                // e.g. 23^1.5 -> 12167^0.5, not ~110.304\n\n                // If you take the root as specified by the denominator and\n                // end up with more digits after the decimal point,\n                // the result is imprecise. This works for rationals as well\n                // as floats, but ideally rationals should be pre-processed\n                // e.g. (1/27)^(1/3) -> 1/3 to avoid most cases.\n                // TODO(alex): Catch such cases and avoid converting to floats.\n                var exp = pow.exp.asRational();\n                var decimalsInBase = pow.base.getDecimalPlaces();\n                var root = new Pow(pow.base, new Rational(1, exp.d));\n                var decimalsInRoot = root.collect().getDecimalPlaces();\n\n                if (decimalsInRoot > decimalsInBase) {\n                    // Collecting over this denominator would result in an\n                    // imprecise float, so avoid doing so.\n                    var newBase = new Pow(pow.base, new Int(exp.n)).collect();\n                    return new Pow(newBase, new Rational(1, exp.d));\n                }\n            }\n\n            // e.g. 4^1.5 -> 8\n            return pow.base.raiseToThe(pow.exp, options);\n        } else {\n            return pow;\n        }\n    },\n\n    // checks whether this Pow represents user-entered division\n    isDivide: function () {\n        var isDiv = function (arg) {\n            return arg instanceof Num && arg.hints.divide;\n        };\n        return (\n            isDiv(this.exp) ||\n            (this.exp instanceof Mul && _.any(this.exp.terms, isDiv))\n        );\n    },\n\n    // assuming this Pow represents user-entered division, returns the denominator\n    asDivide: function () {\n        if (this.exp instanceof Num) {\n            if (this.exp.eval() === -1) {\n                return this.base;\n            } else {\n                var negated = this.exp.negate();\n                negated.hints = _.clone(this.exp.hints);\n                negated.hints.divide = false;\n                return new Pow(this.base, negated);\n            }\n        } else if (this.exp instanceof Mul) {\n            return new Pow(this.base, this.exp.factorOut());\n        } else {\n            error(\"called asDivide() on an Expr that wasn't a Num or Mul\");\n        }\n    },\n\n    isRoot: function () {\n        return this.exp instanceof Rational && this.exp.hints.root;\n    },\n\n    isSquaredTrig: function () {\n        return (\n            this.base instanceof Trig &&\n            !this.base.isInverse() &&\n            this.exp instanceof Num &&\n            this.exp.eval() === 2\n        );\n    },\n\n    // extract whatever denominator makes sense, ignoring hints\n    // if negative exponent, will recursively include the base's denominator as well\n    getDenominator: function () {\n        if (this.exp instanceof Num && this.exp.eval() === -1) {\n            return Mul.createOrAppend(\n                this.base,\n                this.base.getDenominator(),\n            ).flatten();\n        } else if (this.exp.isNegative()) {\n            var pow = new Pow(\n                this.base,\n                Mul.handleNegative(this.exp).collect(),\n            );\n            return Mul.createOrAppend(\n                pow,\n                pow.collect().getDenominator(),\n            ).flatten();\n        } else if (this.base instanceof Num) {\n            return new Pow(this.base.getDenominator(), this.exp).collect();\n        } else {\n            return Num.One;\n        }\n    },\n\n    findGCD: function (factor) {\n        var base, exp;\n        if (factor instanceof Pow) {\n            base = factor.base;\n            exp = factor.exp;\n        } else {\n            base = factor;\n            exp = Num.One;\n        }\n\n        // GCD is only relevant if same base\n        if (this.base.equals(base)) {\n            if (this.exp.equals(exp)) {\n                // exact match\n                // e.g. GCD(x^y^z, x^y^z) -> x^y^z\n                return this;\n            } else if (this.exp instanceof Num && exp instanceof Num) {\n                // two numerical exponents\n                // e.g. GCD(x^3, x^2) -> x^2\n                return new Pow(this.base, Num.min(this.exp, exp)).collect();\n            } else if (this.exp instanceof Num || exp instanceof Num) {\n                // one numerical exponent\n                // e.g. GCD(x^2, x^y) -> 1\n                return Num.One;\n            }\n\n            var expA = this.exp.asMul().partition();\n            var expB = exp.asMul().partition();\n\n            if (expA[1].equals(expB[1])) {\n                // exponents match except for coefficient\n                // e.g. GCD(x^3y, x^y) -> x^y\n                var coefficient = Num.min(expA[0].reduce(), expB[0].reduce());\n                var mul = new Mul(coefficient, expA[1].flatten()).flatten();\n                return new Pow(base, mul).collect();\n            }\n        }\n\n        return Num.One;\n    },\n\n    isPositive: function () {\n        if (this.base.isPositive()) {\n            return true;\n        }\n\n        var exp = this.exp.simplify();\n        return exp instanceof Int && exp.eval() % 2 === 0;\n    },\n\n    asPositiveFactor: function () {\n        if (this.isPositive()) {\n            return this;\n        } else {\n            var exp = this.exp.simplify();\n            if (exp instanceof Int) {\n                var n = exp.eval();\n                if (n > 2) {\n                    // e.g. x^3 -> x^2\n                    return new Pow(this.base, new Int(n - 1));\n                } else if (n < -2) {\n                    // e.g. x^-3 -> x^-2\n                    return new Pow(this.base, new Int(n + 1));\n                }\n            }\n            return Num.One;\n        }\n    },\n});\n\n_.extend(Pow, {\n    sqrt: function (arg) {\n        return new Pow(arg, Num.Sqrt);\n    },\n\n    nthroot: function (radicand, degree) {\n        var exp = Mul.fold(Mul.handleDivide(new Int(1), degree));\n\n        // FIXME(johnsullivan): If oneOverDegree ends up being a pow object,\n        //     this \"root\" hint is lost between here and when tex() is called.\n        return new Pow(radicand, exp.addHint(\"root\"));\n    },\n});\n\n/* logarithm */\nexport function Log(base, power) {\n    this.base = base;\n    this.power = power;\n}\nLog.prototype = new Expr();\n\n_.extend(Log.prototype, {\n    func: Log,\n    args: function () {\n        return [this.base, this.power];\n    },\n\n    eval: function (vars, options) {\n        return (\n            Math.log(this.power.eval(vars, options)) /\n            Math.log(this.base.eval(vars, options))\n        );\n    },\n\n    codegen: function () {\n        return (\n            \"(Math.log(\" +\n            this.power.codegen() +\n            \") / Math.log(\" +\n            this.base.codegen() +\n            \"))\"\n        );\n    },\n\n    print: function () {\n        var power = \"(\" + this.power.print() + \")\";\n        if (this.isNatural()) {\n            return \"ln\" + power;\n        } else {\n            return \"log_(\" + this.base.print() + \") \" + power;\n        }\n    },\n\n    tex: function () {\n        var power = \"(\" + this.power.tex() + \")\";\n        if (this.isNatural()) {\n            return \"\\\\ln\" + power;\n        } else {\n            return \"\\\\log_{\" + this.base.tex() + \"}\" + power;\n        }\n    },\n\n    collect: function (options) {\n        var log = this.recurse(\"collect\", options);\n\n        if (log.power instanceof Num && log.power.eval() === 1) {\n            // e.g. ln(1) -> 0\n            return Num.Zero;\n        } else if (log.base.equals(log.power)) {\n            // e.g. log_b(b) -> 1\n            return Num.One;\n        } else if (\n            log.power instanceof Pow &&\n            log.power.base.equals(log.base)\n        ) {\n            // e.g. log_b(b^x) -> x\n            return log.power.exp;\n        } else {\n            return log;\n        }\n    },\n\n    expand: function () {\n        var log = this.recurse(\"expand\");\n\n        if (log.power instanceof Mul) {\n            // might want behind super-simplify() flag\n            // e.g. ln(xy) -> ln(x) + ln(y)\n\n            var terms = _.map(log.power.terms, function (term) {\n                // need to expand again in case new log powers are Pows\n                return new Log(log.base, term).expand();\n            });\n\n            return new Add(terms);\n        } else if (log.power instanceof Pow) {\n            // e.g. ln(x^y) -> y*ln(x)\n\n            return new Mul(\n                log.power.exp,\n                new Log(log.base, log.power.base).expand(),\n            ).flatten();\n        } else if (!log.isNatural()) {\n            // e.g. log_b(x) -> ln(x)/ln(b)\n\n            return Mul.handleDivide(\n                new Log(Const.e, log.power),\n                new Log(Const.e, log.base),\n            );\n        } else {\n            return log;\n        }\n    },\n\n    hints: _.extend(Log.prototype.hints, {\n        open: false,\n    }),\n\n    isPositive: function () {\n        var log = this.collect();\n\n        if (log.base instanceof Num && log.power instanceof Num) {\n            return this.eval() > 0;\n        } else {\n            return false;\n        }\n    },\n\n    needsExplicitMul: function () {\n        return false;\n    },\n\n    isNatural: function () {\n        return this.base.equals(Const.e);\n    },\n});\n\n_.extend(Log, {\n    natural: function () {\n        return Const.e;\n    },\n    common: function () {\n        return Num.Ten;\n    },\n\n    create: function (base, power) {\n        var log = new Log(base, power);\n        if (!power.hints.parens) {\n            log = log.addHint(\"open\");\n        }\n        return log;\n    },\n});\n\n/* trigonometric functions */\nexport function Trig(type, arg) {\n    this.type = type;\n    this.arg = arg;\n}\nTrig.prototype = new Expr();\n\n_.extend(Trig.prototype, {\n    func: Trig,\n    args: function () {\n        return [this.type, this.arg];\n    },\n\n    functions: {\n        sin: {\n            eval: Math.sin,\n            codegen: \"Math.sin((\",\n            tex: \"\\\\sin\",\n            expand: function () {\n                return this;\n            },\n        },\n        cos: {\n            eval: Math.cos,\n            codegen: \"Math.cos((\",\n            tex: \"\\\\cos\",\n            expand: function () {\n                return this;\n            },\n        },\n        tan: {\n            eval: Math.tan,\n            codegen: \"Math.tan((\",\n            tex: \"\\\\tan\",\n            expand: function () {\n                return Mul.handleDivide(Trig.sin(this.arg), Trig.cos(this.arg));\n            },\n        },\n        csc: {\n            eval: function (arg) {\n                return 1 / Math.sin(arg);\n            },\n            codegen: \"(1/Math.sin(\",\n            tex: \"\\\\csc\",\n            expand: function () {\n                return Mul.handleDivide(Num.One, Trig.sin(this.arg));\n            },\n        },\n        sec: {\n            eval: function (arg) {\n                return 1 / Math.cos(arg);\n            },\n            codegen: \"(1/Math.cos(\",\n            tex: \"\\\\sec\",\n            expand: function () {\n                return Mul.handleDivide(Num.One, Trig.cos(this.arg));\n            },\n        },\n        cot: {\n            eval: function (arg) {\n                return 1 / Math.tan(arg);\n            },\n            codegen: \"(1/Math.tan(\",\n            tex: \"\\\\cot\",\n            expand: function () {\n                return Mul.handleDivide(Trig.cos(this.arg), Trig.sin(this.arg));\n            },\n        },\n        arcsin: {\n            eval: Math.asin,\n            codegen: \"Math.asin((\",\n            tex: \"\\\\arcsin\",\n        },\n        arccos: {\n            eval: Math.acos,\n            codegen: \"Math.acos((\",\n            tex: \"\\\\arccos\",\n        },\n        arctan: {\n            eval: Math.atan,\n            codegen: \"Math.atan((\",\n            tex: \"\\\\arctan\",\n        },\n        arccsc: {\n            eval: function (arg) {\n                return Math.asin(1 / arg);\n            },\n            codegen: \"Math.asin(1/(\",\n            tex: \"\\\\operatorname{arccsc}\",\n        },\n        arcsec: {\n            eval: function (arg) {\n                return Math.acos(1 / arg);\n            },\n            codegen: \"Math.acos(1/(\",\n            tex: \"\\\\operatorname{arcsec}\",\n        },\n        arccot: {\n            eval: function (arg) {\n                return Math.atan(1 / arg);\n            },\n            codegen: \"Math.atan(1/(\",\n            tex: \"\\\\operatorname{arccot}\",\n        },\n        sinh: {\n            eval: function (arg) {\n                return (Math.exp(arg) - Math.exp(-arg)) / 2;\n            },\n            codegen: function (argStr) {\n                return (\n                    \"((Math.exp(\" +\n                    argStr +\n                    \") - Math.exp(-(\" +\n                    argStr +\n                    \"))) / 2)\"\n                );\n            },\n            tex: \"\\\\sinh\",\n            expand: function () {\n                return this;\n            },\n        },\n        cosh: {\n            eval: function (arg) {\n                return (Math.exp(arg) + Math.exp(-arg)) / 2;\n            },\n            codegen: function (argStr) {\n                return (\n                    \"((Math.exp(\" +\n                    argStr +\n                    \") + Math.exp(-(\" +\n                    argStr +\n                    \"))) / 2)\"\n                );\n            },\n            tex: \"\\\\cosh\",\n            expand: function () {\n                return this;\n            },\n        },\n        tanh: {\n            eval: function (arg) {\n                return (\n                    (Math.exp(arg) - Math.exp(-arg)) /\n                    (Math.exp(arg) + Math.exp(-arg))\n                );\n            },\n            codegen: function (argStr) {\n                return (\n                    \"(\" +\n                    \"(Math.exp(\" +\n                    argStr +\n                    \") - Math.exp(-(\" +\n                    argStr +\n                    \")))\" +\n                    \" / \" +\n                    \"(Math.exp(\" +\n                    argStr +\n                    \") + Math.exp(-(\" +\n                    argStr +\n                    \")))\" +\n                    \")\"\n                );\n            },\n            tex: \"\\\\tanh\",\n            expand: function () {\n                return Mul.handleDivide(\n                    Trig.sinh(this.arg),\n                    Trig.cosh(this.arg),\n                );\n            },\n        },\n        csch: {\n            eval: function (arg) {\n                return 2 / (Math.exp(arg) - Math.exp(-arg));\n            },\n            codegen: function (argStr) {\n                return (\n                    \"(2 / (Math.exp(\" +\n                    argStr +\n                    \") - Math.exp(-(\" +\n                    argStr +\n                    \"))))\"\n                );\n            },\n            tex: \"\\\\csch\",\n            expand: function () {\n                return Mul.handleDivide(Num.One, Trig.sinh(this.arg));\n            },\n        },\n        sech: {\n            eval: function (arg) {\n                return 2 / (Math.exp(arg) + Math.exp(-arg));\n            },\n            codegen: function (argStr) {\n                return (\n                    \"(2 / (Math.exp(\" +\n                    argStr +\n                    \") + Math.exp(-(\" +\n                    argStr +\n                    \"))))\"\n                );\n            },\n            tex: \"\\\\sech\",\n            expand: function () {\n                return Mul.handleDivide(Num.One, Trig.cosh(this.arg));\n            },\n        },\n        coth: {\n            eval: function (arg) {\n                return (\n                    (Math.exp(arg) + Math.exp(-arg)) /\n                    (Math.exp(arg) - Math.exp(-arg))\n                );\n            },\n            codegen: function (argStr) {\n                return (\n                    \"(\" +\n                    \"(Math.exp(\" +\n                    argStr +\n                    \") + Math.exp(-(\" +\n                    argStr +\n                    \")))\" +\n                    \" / \" +\n                    \"(Math.exp(\" +\n                    argStr +\n                    \") - Math.exp(-(\" +\n                    argStr +\n                    \")))\" +\n                    \")\"\n                );\n            },\n            tex: \"\\\\coth\",\n            expand: function () {\n                return Mul.handleDivide(\n                    Trig.cosh(this.arg),\n                    Trig.sinh(this.arg),\n                );\n            },\n        },\n    },\n\n    isEven: function () {\n        return _.contains([\"cos\", \"sec\"], this.type);\n    },\n\n    isInverse: function () {\n        return this.type.indexOf(\"arc\") === 0;\n    },\n\n    isBasic: function () {\n        return _.contains([\"sin\", \"cos\"], this.type);\n    },\n\n    eval: function (vars, options) {\n        var func = this.functions[this.type].eval;\n        var arg = this.arg.eval(vars, options);\n        return func(arg);\n    },\n\n    codegen: function () {\n        var func = this.functions[this.type].codegen;\n        if (typeof func === \"function\") {\n            return func(this.arg.codegen());\n        } else if (typeof func === \"string\") {\n            return func + this.arg.codegen() + \"))\";\n        } else {\n            throw new Error(\"codegen not implemented for \" + this.type);\n        }\n    },\n\n    print: function () {\n        return this.type + \"(\" + this.arg.print() + \")\";\n    },\n\n    tex: function (options) {\n        var func = this.functions[this.type].tex;\n        var arg = \"(\" + this.arg.tex() + \")\";\n        return options && options.split ? [func, arg] : func + arg;\n    },\n\n    hints: _.extend(Trig.prototype.hints, {\n        open: false,\n    }),\n\n    isPositive: function () {\n        var trig = this.collect();\n\n        if (trig.arg instanceof Num) {\n            return this.eval() > 0;\n        } else {\n            return false;\n        }\n    },\n\n    completeParse: function () {\n        if (this.exp) {\n            var pow = new Pow(this, this.exp);\n            this.exp = undefined;\n            return pow;\n        } else {\n            return this;\n        }\n    },\n\n    // TODO(alex): does every new node type need to redefine these?\n    needsExplicitMul: function () {\n        return false;\n    },\n\n    expand: function () {\n        var trig = this.recurse(\"expand\");\n        if (!trig.isInverse()) {\n            // e.g. tan(x) -> sin(x)/cos(x)\n            var expand = trig.functions[trig.type].expand;\n            return _.bind(expand, trig)();\n        } else {\n            return trig;\n        }\n    },\n\n    collect: function (options) {\n        var trig = this.recurse(\"collect\", options);\n        if (!trig.isInverse() && trig.arg.isNegative()) {\n            var arg;\n            if (trig.arg instanceof Num) {\n                arg = trig.arg.abs();\n            } else {\n                arg = Mul.handleDivide(trig.arg, Num.Neg).collect(options);\n            }\n\n            if (trig.isEven()) {\n                // e.g. cos(-x) -> cos(x)\n                return new Trig(trig.type, arg);\n            } else {\n                // e.g. sin(-x) -> -sin(x)\n                return new Mul(Num.Neg, new Trig(trig.type, arg));\n            }\n        } else {\n            return trig;\n        }\n    },\n});\n\n_.extend(Trig, {\n    create: function (pair, arg) {\n        var type = pair[0];\n        var exp = pair[1];\n\n        if (exp && exp.equals(Num.Neg)) {\n            // e.g. sin^-1(x) -> arcsin(x)\n            type = \"arc\" + type;\n            exp = undefined;\n        }\n\n        var trig = new Trig(type, arg);\n        if (!arg.hints.parens) {\n            trig = trig.addHint(\"open\");\n        }\n\n        if (exp) {\n            trig.exp = exp;\n        }\n\n        return trig;\n    },\n\n    sin: function (arg) {\n        return new Trig(\"sin\", arg);\n    },\n\n    cos: function (arg) {\n        return new Trig(\"cos\", arg);\n    },\n\n    sinh: function (arg) {\n        return new Trig(\"sinh\", arg);\n    },\n\n    cosh: function (arg) {\n        return new Trig(\"cosh\", arg);\n    },\n});\n\nexport function Abs(arg) {\n    this.arg = arg;\n}\nAbs.prototype = new Expr();\n\n_.extend(Abs.prototype, {\n    func: Abs,\n    args: function () {\n        return [this.arg];\n    },\n    eval: function (vars, options) {\n        return Math.abs(this.arg.eval(vars, options));\n    },\n    codegen: function () {\n        return \"Math.abs(\" + this.arg.codegen() + \")\";\n    },\n    print: function () {\n        return \"abs(\" + this.arg.print() + \")\";\n    },\n\n    tex: function () {\n        return \"\\\\left|\" + this.arg.tex() + \"\\\\right|\";\n    },\n\n    collect: function (options) {\n        var abs = this.recurse(\"collect\", options);\n\n        if (abs.arg.isPositive()) {\n            // e.g. |2^x| -> 2^x\n            return abs.arg;\n        } else if (abs.arg instanceof Num) {\n            // e.g. |-2| -> 2\n            return abs.arg.abs();\n        } else if (abs.arg instanceof Mul) {\n            // e.g. |-2*pi*x| -> 2*pi*|x|\n            var terms = _.groupBy(abs.arg.terms, function (term) {\n                if (term.isPositive()) {\n                    return \"positive\";\n                } else if (term instanceof Num) {\n                    return \"number\";\n                } else {\n                    return \"other\";\n                }\n            });\n\n            var positives = terms.positive.concat(\n                _.invoke(terms.number, \"abs\"),\n            );\n\n            if (terms.other.length) {\n                positives.push(new Abs(new Mul(terms.other).flatten()));\n            }\n\n            return new Mul(positives).flatten();\n        } else {\n            return abs;\n        }\n    },\n\n    // this should definitely be behind a super-simplify flag\n    expand: function () {\n        var abs = this.recurse(\"expand\");\n\n        if (abs.arg instanceof Mul) {\n            // e.g. |xyz| -> |x|*|y|*|z|\n            var terms = _.map(abs.arg.terms, function (term) {\n                return new Abs(term);\n            });\n            return new Mul(terms);\n        } else {\n            return abs;\n        }\n    },\n\n    isPositive: function () {\n        return true;\n    },\n});\n\n/* equation */\nexport function Eq(left, type, right) {\n    this.left = left;\n    this.type = type;\n    this.right = right;\n}\nEq.prototype = new Expr();\n\n_.extend(Eq.prototype, {\n    func: Eq,\n    args: function () {\n        return [this.left, this.type, this.right];\n    },\n\n    needsExplicitMul: function () {\n        return false;\n    },\n\n    print: function () {\n        return this.left.print() + this.type + this.right.print();\n    },\n\n    signs: {\n        \"=\": \" = \",\n        \"<\": \" < \",\n        \">\": \" > \",\n        \"<>\": \" \\\\ne \",\n        \"<=\": \" \\\\le \",\n        \">=\": \" \\\\ge \",\n    },\n\n    tex: function () {\n        return this.left.tex() + this.signs[this.type] + this.right.tex();\n    },\n\n    normalize: function () {\n        var eq = this.recurse(\"normalize\");\n\n        if (_.contains([\">\", \">=\"], eq.type)) {\n            // inequalities should have the smaller side on the left\n            return new Eq(eq.right, eq.type.replace(\">\", \"<\"), eq.left);\n        } else {\n            return eq;\n        }\n    },\n\n    // convert this equation to an expression set to zero\n    // the expression is normalized to a canonical form\n    // e.g. y/2=x/4 -> y/2-x/4(=0) -> 2y-x(=0)\n    // unless unfactored is specified, will then divide through\n    asExpr: function (unfactored) {\n        var isZero = function (expr) {\n            return expr instanceof Num && expr.isSimple() && expr.eval() === 0;\n        };\n\n        // first convert to a sequence of additive terms\n        var terms = [];\n\n        if (this.left instanceof Add) {\n            terms = _.clone(this.left.terms);\n        } else if (!isZero(this.left)) {\n            terms = [this.left];\n        }\n\n        if (this.right instanceof Add) {\n            terms = terms.concat(this.right.negate().terms);\n        } else if (!isZero(this.right)) {\n            terms.push(this.right.negate());\n        }\n\n        var isInequality = !this.isEquality();\n\n        // Collect over each term individually to transform simple expressions\n        // into numbers that might have denominators, taking into account\n        // float precision. We have to be very careful to not introduce any\n        // irrational floats before asExpr() returns, because by definition\n        // they do not have exact denominators...\n        terms = _.invoke(terms, \"collect\", {preciseFloats: true});\n\n        // ...and we multiply through by every denominator.\n        for (var i = 0; i < terms.length; i++) {\n            var denominator = terms[i].getDenominator();\n\n            // Can't multiply inequalities by non 100% positive factors\n            if (isInequality && !denominator.isPositive()) {\n                denominator = denominator.asPositiveFactor();\n            }\n\n            if (!denominator.equals(Num.One)) {\n                terms = _.map(terms, function (term) {\n                    return Mul.createOrAppend(term, denominator).simplify({\n                        once: true,\n                        preciseFloats: true,\n                    });\n                });\n            }\n        }\n\n        var add = new Add(terms).flatten();\n        return unfactored ? add : this.divideThrough(add);\n    },\n\n    // divide through by every common factor in the expression\n    // e.g. 2y-4x(=0) -> y-2x(=0)\n    // TODO(alex): Make it an option to only divide by variables/expressions\n    // guaranteed to be nonzero\n    divideThrough: function (expr) {\n        var isInequality = !this.isEquality();\n\n        var simplified = expr.simplify({once: true});\n        var factored = simplified.factor({keepNegative: isInequality});\n\n        if (!(factored instanceof Mul)) {\n            return expr;\n        }\n\n        var terms = factored.terms;\n\n        var isAdd = function (term) {\n            return term instanceof Add;\n        };\n        var hasVar = function (term) {\n            return !!term.getVars().length;\n        };\n        var isOne = function (term) {\n            return term.equals(Num.One);\n        };\n\n        var grouped = _.groupBy(terms, isAdd);\n        var adds = grouped[true] || [];\n        var others = grouped[false] || [];\n\n        if (adds.length && this.isEquality()) {\n            // keep only Adds\n            // e.g. 2xy(z+1)(=0) -> z+1(=0)\n            return new Mul(adds).flatten();\n        }\n\n        var denominator = others;\n\n        if (!adds.length) {\n            // if no Adds, keep all variable terms to preserve meaning\n            // e.g. 42xyz(=0) -> xyz(=0)\n            denominator = _.reject(denominator, hasVar);\n        }\n\n        if (isInequality) {\n            // can't divide inequalities by non 100% positive factors\n            // e.g. 42x^2y(z+1)(=0) -> y(z+1)(=0)\n            denominator = _.invoke(denominator, \"asPositiveFactor\");\n        }\n\n        // don't need to divide by one\n        denominator = _.reject(denominator, isOne);\n\n        denominator = _.map(denominator, function (term) {\n            return new Pow(term, Num.Div);\n        });\n\n        var dividedResult = new Mul(terms.concat(denominator)).collect();\n\n        // If the end result is the same as the original factoring,\n        // rollback the factoring and discard all intermediate steps.\n        if (dividedResult.equals(factored)) {\n            return simplified;\n        } else {\n            return dividedResult;\n        }\n    },\n\n    isEquality: function () {\n        return _.contains([\"=\", \"<>\"], this.type);\n    },\n\n    compare: function (other) {\n        // expression comparisons are handled by Expr.compare()\n        if (!(other instanceof Eq)) {\n            return false;\n        }\n\n        var eq1 = this.normalize();\n        var eq2 = other.normalize();\n\n        if (eq1.type !== eq2.type) {\n            return false;\n        }\n\n        // need to collect to properly factor out common factors\n        // e.g x+2x=6 -> 3x=6 -> 3x-6(=0) -> x-2(=0)\n        var expr1 = eq1.divideThrough(\n            eq1.asExpr(/* unfactored */ true).collect(),\n        );\n        var expr2 = eq2.divideThrough(\n            eq2.asExpr(/* unfactored */ true).collect(),\n        );\n\n        if (eq1.isEquality()) {\n            // equals and not-equals can be subtracted either way\n            return (\n                expr1.compare(expr2) || expr1.compare(Mul.handleNegative(expr2))\n            );\n        } else {\n            return expr1.compare(expr2);\n        }\n    },\n\n    // should only be done after compare() returns true to avoid false positives\n    sameForm: function (other) {\n        var eq1 = this.normalize();\n        var eq2 = other.normalize();\n\n        var same = eq1.left.sameForm(eq2.left) && eq1.right.sameForm(eq2.right);\n\n        if (eq1.isEquality()) {\n            // equals and not-equals can be commutative with respect to the sign\n            return (\n                same ||\n                (eq1.left.sameForm(eq2.right) && eq1.right.sameForm(eq2.left))\n            );\n        } else {\n            return same;\n        }\n    },\n\n    // we don't want to override collect because it would turn y=x into y-x(=0)\n    // instead, we ask if the equation was in that form, would it be simplified?\n    isSimplified: function () {\n        var expr = this.asExpr(/* unfactored */ true);\n        var simplified = this.divideThrough(expr).simplify();\n        return (\n            expr.equals(simplified) &&\n            this.left.isSimplified() &&\n            this.right.isSimplified()\n        );\n    },\n});\n\n_.extend(Eq.prototype, {\n    // Assumptions: Expression is of the form a+bx, and we solve for x\n    solveLinearEquationForVariable: function (variable) {\n        var expr = this.asExpr();\n        if (!expr.is(Add) || expr.terms.length !== 2) {\n            throw new Error(\n                \"Can only handle linear equations of the form \" +\n                    \"a + bx (= 0)\",\n            );\n        }\n\n        var hasVar = function (term) {\n            return term.has(Var) && _.contains(term.getVars(), variable.symbol);\n        };\n\n        var a, b;\n\n        if (hasVar(expr.terms[0])) {\n            a = Mul.handleNegative(expr.terms[1]);\n            b = Mul.handleDivide(expr.terms[0], variable);\n        } else {\n            a = Mul.handleNegative(expr.terms[0]);\n            b = Mul.handleDivide(expr.terms[1], variable);\n        }\n\n        return Mul.handleDivide(a, b).simplify();\n    },\n});\n\n/* abstract symbol node */\nfunction Symbol() {}\nSymbol.prototype = new Expr();\n\n_.extend(Symbol.prototype, {\n    needsExplicitMul: function () {\n        return false;\n    },\n\n    findGCD: function (factor) {\n        if (factor instanceof Symbol || factor instanceof Num) {\n            return this.equals(factor) ? this : Num.One;\n        } else {\n            return factor.findGCD(this);\n        }\n    },\n});\n\n/* function variable */\nexport function Func(symbol, arg) {\n    this.symbol = symbol;\n    this.arg = arg;\n}\nFunc.prototype = new Symbol();\n\n_.extend(Func.prototype, {\n    func: Func,\n    args: function () {\n        return [this.symbol, this.arg];\n    },\n\n    print: function () {\n        return this.symbol + \"(\" + this.arg.print() + \")\";\n    },\n\n    tex: function () {\n        return this.symbol + \"(\" + this.arg.tex() + \")\";\n    },\n\n    eval: function (vars, options) {\n        var arg = this.arg;\n        var func = vars[this.symbol];\n        var newVars = _.extend(_.clone(vars), {\n            x: arg.eval(vars, options),\n        });\n        var parsedFunc = parse(func, options);\n        if (parsedFunc.parsed) {\n            return parsedFunc.expr.eval(newVars, options);\n        }\n        // If parsedFunc isn't actually parsed, return its error\n        return parsedFunc;\n    },\n\n    codegen: function () {\n        return 'vars[\"' + this.symbol + '\"](' + this.arg.codegen() + \")\";\n    },\n\n    getUnits: function () {\n        return this.arg.getUnits();\n    },\n\n    getVars: function (excludeFunc) {\n        if (excludeFunc) {\n            return this.arg.getVars();\n        } else {\n            return _.union(this.arg.getVars(), [this.symbol]).sort();\n        }\n    },\n\n    getConsts: function () {\n        return this.arg.getConsts();\n    },\n});\n\n/* variable */\nexport function Var(symbol, subscript) {\n    this.symbol = symbol;\n    this.subscript = subscript;\n}\nVar.prototype = new Symbol();\n\n_.extend(Var.prototype, {\n    func: Var,\n    args: function () {\n        return [this.symbol, this.subscript];\n    },\n\n    exprArgs: function () {\n        return [];\n    },\n    recurse: function () {\n        return this;\n    },\n\n    print: function () {\n        var sub = \"\";\n        if (this.subscript) {\n            sub = \"_(\" + this.subscript.print() + \")\";\n        }\n        return this.symbol + sub;\n    },\n\n    // Provide a way to easily evalate expressions with the common case,\n    // subscripts that consist of a single number or symbol e.g. x_a or x_42\n    prettyPrint: function () {\n        var sub = this.subscript;\n        if (sub && (sub instanceof Num || sub instanceof Symbol)) {\n            return this.symbol + \"_\" + sub.print();\n        } else {\n            return this.print();\n        }\n    },\n\n    tex: function () {\n        var sub = \"\";\n        if (this.subscript) {\n            sub = \"_{\" + this.subscript.tex() + \"}\";\n        }\n        var prefix = this.symbol.length > 1 ? \"\\\\\" : \"\";\n        return prefix + this.symbol + sub;\n    },\n\n    repr: function () {\n        return \"Var(\" + this.print() + \")\";\n    },\n\n    eval: function (vars, options) {\n        return vars[this.prettyPrint()];\n    },\n\n    codegen: function () {\n        return 'vars[\"' + this.prettyPrint() + '\"]';\n    },\n\n    getVars: function () {\n        return [this.prettyPrint()];\n    },\n\n    isPositive: function () {\n        return false;\n    },\n});\n\n/* constant */\nexport function Const(symbol) {\n    this.symbol = symbol;\n}\nConst.prototype = new Symbol();\n\n_.extend(Const.prototype, {\n    func: Const,\n    args: function () {\n        return [this.symbol];\n    },\n    recurse: function () {\n        return this;\n    },\n\n    eval: function (vars, options) {\n        if (this.symbol === \"pi\") {\n            return Math.PI;\n        } else if (this.symbol === \"e\") {\n            return Math.E;\n        }\n    },\n\n    codegen: function () {\n        if (this.symbol === \"pi\") {\n            return \"Math.PI\";\n        } else if (this.symbol === \"e\") {\n            return \"Math.E\";\n        }\n    },\n\n    print: function () {\n        return this.symbol;\n    },\n\n    tex: function () {\n        if (this.symbol === \"pi\") {\n            return \"\\\\pi \";\n        } else if (this.symbol === \"e\") {\n            return \"e\";\n        }\n    },\n\n    isPositive: function () {\n        return this.eval() > 0;\n    },\n\n    abs: function () {\n        if (this.eval() > 0) {\n            return this;\n        } else {\n            return Mul.handleNegative(this);\n        }\n    },\n\n    getConsts: function () {\n        return [this.print()];\n    },\n});\n\nConst.e = new Const(\"e\");\nConst.pi = new Const(\"pi\");\n\n/* abstract number node */\nfunction Num() {}\nNum.prototype = new Expr();\n\n_.extend(Num.prototype, {\n    repr: function () {\n        return this.print();\n    },\n    strip: function () {\n        return this.abs();\n    },\n    recurse: function () {\n        return this;\n    },\n    codegen: function () {\n        return this.print();\n    },\n\n    // takes another Num and returns a new Num\n    add: abstract,\n    mul: abstract,\n\n    // returns this Num's additive inverse\n    negate: abstract,\n\n    isSubtract: function () {\n        return this.hints.subtract;\n    },\n\n    // return the absolute value of the number\n    abs: abstract,\n\n    needsExplicitMul: function () {\n        return true;\n    },\n\n    findGCD: abstract,\n\n    isPositive: function () {\n        return this.eval() > 0;\n    },\n\n    isNegative: function () {\n        return this.eval() < 0;\n    },\n\n    asPositiveFactor: function () {\n        return this.isPositive() ? this : this.abs();\n    },\n\n    // hints for interpreting and rendering user input\n    hints: _.extend(Num.prototype.hints, {\n        negate: false,\n        subtract: false,\n        divide: false,\n        root: false,\n        fraction: false,\n        entered: false,\n    }),\n\n    // whether a number is considered simple (one term)\n    // e.g. for reals, ints and floats are simple\n    isSimple: abstract,\n\n    // Based on http://stackoverflow.com/a/10454560/2571482\n    getDecimalPlaces: function () {\n        var match = (\"\" + this.n).match(/(?:\\.(\\d+))?(?:[eE]([+-]?\\d+))?$/);\n        if (match) {\n            return Math.max(\n                0,\n                // Number of digits right of decimal point\n                (match[1] ? match[1].length : 0) -\n                    // Adjust for scientific notation\n                    (match[2] ? +match[2] : 0),\n            );\n        } else {\n            return 0;\n        }\n    },\n\n    asRational: abstract,\n});\n\n/* rational number (n: numerator, d: denominator) */\nexport function Rational(numerator, denominator) {\n    var n = numerator;\n    var d = denominator;\n    if (d < 0) {\n        n = -n;\n        d = -d;\n    }\n    this.n = n;\n    this.d = d;\n}\nRational.prototype = new Num();\n\n_.extend(Rational.prototype, {\n    func: Rational,\n    args: function () {\n        return [this.n, this.d];\n    },\n    eval: function () {\n        return this.n / this.d;\n    },\n\n    print: function () {\n        return this.n.toString() + \"/\" + this.d.toString();\n    },\n\n    tex: function () {\n        var tex =\n            \"\\\\frac{\" +\n            Math.abs(this.n).toString() +\n            \"}{\" +\n            this.d.toString() +\n            \"}\";\n        return this.n < 0 ? \"-\" + tex : tex;\n    },\n\n    add: function (num, options) {\n        if (num instanceof Rational) {\n            return new Rational(\n                this.n * num.d + this.d * num.n,\n                this.d * num.d,\n            ).collect();\n        } else {\n            return num.add(this, options);\n        }\n    },\n\n    mul: function (num, options) {\n        if (num instanceof Rational) {\n            return new Rational(this.n * num.n, this.d * num.d).collect();\n        } else {\n            return num.mul(this, options);\n        }\n    },\n\n    collect: function () {\n        var gcd = Num.findGCD(this.n, this.d);\n\n        var n = this.n / gcd;\n        var d = this.d / gcd;\n\n        if (d === 1) {\n            return new Int(n);\n        } else {\n            return new Rational(n, d);\n        }\n    },\n\n    negate: function () {\n        return new Rational(-this.n, this.d);\n    },\n\n    abs: function () {\n        return new Rational(Math.abs(this.n), this.d);\n    },\n\n    findGCD: function (factor) {\n        // Attempt to factor out common numerators and denominators to return\n        // a Rational instead of a Float\n        if (factor instanceof Rational) {\n            // For more background, see\n            // http://math.stackexchange.com/questions/151081/gcd-of-rationals\n            var numerator = Num.findGCD(this.n * factor.d, factor.n * this.d);\n            var denominator = this.d * factor.d;\n            // Create the rational, then call .collect() to simplify it\n            return new Rational(numerator, denominator).collect();\n        } else if (factor instanceof Int) {\n            return new Rational(Num.findGCD(this.n, factor.n), this.d);\n        } else {\n            return factor.findGCD(this);\n        }\n    },\n\n    // for now, assuming that exp is a Num\n    raiseToThe: function (exp) {\n        if (exp instanceof Int) {\n            var positive = exp.eval() > 0;\n            var abs = exp.abs().eval();\n            var n = Math.pow(this.n, abs);\n            var d = Math.pow(this.d, abs);\n            if (positive) {\n                return new Rational(n, d).collect();\n            } else {\n                return new Rational(d, n).collect();\n            }\n        } else {\n            return new Float(this.eval()).raiseToThe(exp);\n        }\n    },\n\n    getDenominator: function () {\n        return new Int(this.d);\n    },\n\n    isSimple: function () {\n        return false;\n    },\n\n    asRational: function () {\n        return this;\n    },\n});\n\n/* integer (n: numerator/number) */\nexport function Int(number) {\n    this.n = number;\n}\nInt.prototype = new Rational(0, 1);\n\n_.extend(Int.prototype, {\n    func: Int,\n    args: function () {\n        return [this.n];\n    },\n    print: function () {\n        return this.n.toString();\n    },\n    tex: function () {\n        return this.n.toString();\n    },\n    negate: function () {\n        return new Int(-this.n);\n    },\n    abs: function () {\n        return new Int(Math.abs(this.n));\n    },\n    isSimple: function () {\n        return true;\n    },\n    findGCD: function (factor) {\n        if (factor instanceof Int) {\n            return new Int(Num.findGCD(this.n, factor.n));\n        } else {\n            return factor.findGCD(this);\n        }\n    },\n});\n\n_.extend(Int, {\n    create: function (n) {\n        return new Int(n).addHint(\"entered\");\n    },\n});\n\n/* float (n: number) */\nexport function Float(number) {\n    this.n = number;\n}\nFloat.prototype = new Num();\n\n_.extend(Float.prototype, {\n    func: Float,\n    args: function () {\n        return [this.n];\n    },\n    eval: function () {\n        return this.n;\n    },\n\n    // TODO(alex): when we internationalize number parsing/display\n    // we should make sure to use the appropriate decimal mark here\n    print: function () {\n        return this.n.toString();\n    },\n    tex: function () {\n        return this.n.toString();\n    },\n\n    add: function (num, options) {\n        if (options && options.preciseFloats) {\n            return Float.toDecimalPlaces(\n                this.n + num.eval(),\n                Math.max(this.getDecimalPlaces(), num.getDecimalPlaces()),\n            );\n        } else {\n            return new Float(this.n + num.eval()).collect();\n        }\n    },\n\n    mul: function (num, options) {\n        if (options && options.preciseFloats) {\n            return Float.toDecimalPlaces(\n                this.n * num.eval(),\n                this.getDecimalPlaces() + num.getDecimalPlaces(),\n            );\n        } else {\n            return new Float(this.n * num.eval()).collect();\n        }\n    },\n\n    collect: function () {\n        // We used to simplify Floats to Ints here whenever possible, but no\n        // longer do so in order to preserve significant figures.\n        return this;\n    },\n\n    negate: function () {\n        return new Float(-this.n);\n    },\n    abs: function () {\n        return new Float(Math.abs(this.n));\n    },\n\n    findGCD: function (factor) {\n        if (factor instanceof Num) {\n            return new Float(Num.findGCD(this.eval(), factor.eval())).collect();\n        } else {\n            return factor.findGCD(this);\n        }\n    },\n\n    // for now, assuming that exp is a Num\n    raiseToThe: function (exp, options) {\n        if (\n            options &&\n            options.preciseFloats &&\n            exp instanceof Int &&\n            exp.n > 1\n        ) {\n            return Float.toDecimalPlaces(\n                new Pow(this, exp).eval(),\n                this.getDecimalPlaces() * exp.n,\n            );\n        } else {\n            return new Float(new Pow(this, exp).eval()).collect();\n        }\n    },\n\n    // only to be used on non-repeating decimals (e.g. user-provided)\n    asRational: function () {\n        var parts = this.n.toString().split(\".\");\n        if (parts.length === 1) {\n            return new Rational(this.n, 1);\n        } else {\n            var numerator = Number(parts.join(\"\"));\n            var denominator = Math.pow(10, parts[1].length);\n            return new Rational(numerator, denominator).collect();\n        }\n    },\n\n    getDenominator: function () {\n        return this.asRational().getDenominator();\n    },\n\n    isSimple: function () {\n        return true;\n    },\n});\n\n_.extend(Float, {\n    create: function (n) {\n        return new Float(n).addHint(\"entered\");\n    },\n\n    // Account for floating point imprecision by explicitly controlling the\n    // number of decimal places in common operations (e.g. +, *, ^)\n    toDecimalPlaces: function (n, places) {\n        return new Float(+n.toFixed(Math.min(places, 20))).collect();\n    },\n});\n\n// static methods and fields that are best defined on Num\n_.extend(Num, {\n    negativeOne: function (hint) {\n        if (hint === \"subtract\") {\n            return Num.Sub;\n        } else if (hint === \"divide\") {\n            return Num.Div;\n        } else {\n            return Num.Neg;\n        }\n    },\n\n    // find the greatest common denominator\n    findGCD: function (a, b) {\n        var mod;\n\n        a = Math.abs(a);\n        b = Math.abs(b);\n\n        // Euclid's method doesn't handle non-integers very well. For now\n        // we just say we can't pull out a common factor. It might be\n        // reasonable to do better than this in the future.\n        if (a !== Math.floor(a) || b !== Math.floor(b)) {\n            return 1;\n        }\n\n        while (b) {\n            mod = a % b;\n            a = b;\n            b = mod;\n        }\n\n        return a;\n    },\n\n    min: function () {\n        return _.min(_.toArray(arguments), function (num) {\n            return num.eval();\n        });\n    },\n\n    max: function () {\n        return _.max(_.toArray(arguments), function (num) {\n            return num.eval();\n        });\n    },\n});\n\nNum.Neg = new Int(-1).addHint(\"negate\");\nNum.Sub = new Int(-1).addHint(\"subtract\");\nNum.Div = new Int(-1).addHint(\"divide\");\n\nNum.Sqrt = new Rational(1, 2).addHint(\"root\");\n\nNum.Zero = new Int(0);\nNum.One = new Int(1);\nNum.Ten = new Int(10);\n\n// set identities here\nAdd.prototype.identity = Num.Zero;\nMul.prototype.identity = Num.One;\n\nvar parseError = function (str, hash) {\n    // return int location of parsing error\n    throw new Error(hash.loc.first_column);\n};\n\n// expose concrete nodes to parser scope\n// see http://zaach.github.io/jison/docs/#sharing-scope\nparser.yy = {\n    Add: Add,\n    Mul: Mul,\n    Pow: Pow,\n    Log: Log,\n    Trig: Trig,\n    Eq: Eq,\n    Abs: Abs,\n    Func: Func,\n    Const: Const,\n    Var: Var,\n    Int: Int,\n    Float: Float,\n    parseError: parseError,\n\n    constants: [\"e\"],\n    symbolLexer: function (symbol) {\n        if (_.contains(parser.yy.constants, symbol)) {\n            return \"CONST\";\n        } else if (_.contains(parser.yy.functions, symbol)) {\n            return \"FUNC\";\n        } else {\n            return \"VAR\";\n        }\n    },\n};\n\nexport const parse = function (input, options) {\n    try {\n        if (options && options.functions) {\n            // reserve the symbol \"i\" for complex numbers\n            parser.yy.functions = _.without(options.functions, \"i\");\n        } else {\n            parser.yy.functions = [];\n        }\n\n        // If ',' is the decimal dividor in your country, replace any ','s\n        // with '.'s.\n        // This isn't perfect, since the output will all still have '.'s.\n        // TODO(jack): Fix the output to have ','s in this case\n        if (options && options.decimal_separator) {\n            input = input.split(options.decimal_separator).join(\".\");\n        }\n\n        var expr = parser.parse(input).completeParse();\n        return {parsed: true, expr: expr};\n    } catch (e) {\n        return {parsed: false, error: e.message};\n    }\n};\n\n/* unit */\nexport function Unit(symbol) {\n    this.symbol = symbol;\n}\nUnit.prototype = new Symbol();\n\n// If possible, replace unit prefixes with a multiplication.\n//\n// \"g\" -> Unit(\"g\")\n// \"kg\" -> 1000 * Unit(\"g\")\nvar unprefixify = function (symbol) {\n    if (_(baseUnits).has(symbol) || _(derivedUnits).has(symbol)) {\n        return new Unit(symbol);\n    }\n\n    // check for prefix\n    var prefix = _(_(siPrefixes).keys()).find(function (testPrefix) {\n        return new RegExp(\"^\" + testPrefix).test(symbol);\n    });\n\n    if (prefix) {\n        var base = symbol.replace(new RegExp(\"^\" + prefix), \"\");\n\n        // It's okay to be here if either:\n        // * `base` is a base unit (the seven units listed in baseUnits)\n        // * `base` is a derived unit which allows prefixes\n        //\n        // Otherwise, we're trying to parse a unit label which is not\n        // allowed (mwk, mBTU, etc).\n        if (\n            _(baseUnits).has(base) ||\n            (derivedUnits[base] && derivedUnits[base].prefixes === hasPrefixes)\n        ) {\n            return new Mul(siPrefixes[prefix], new Unit(base));\n        } else {\n            throw new Error(base + \" does not allow prefixes\");\n        }\n    } else {\n        return new Unit(symbol);\n    }\n};\n\nexport const unitParse = function (input) {\n    try {\n        var parseResult = unitParser.parse(input);\n\n        // parseResult looks like:\n        // {\n        //   magnitude: \"5\",\n        //   unit: {\n        //     num: [\n        //       { name: \"s\", pow: 2 }\n        //     ],\n        //     denom: [\n        //       { name: \"kg\", pow: 1 }\n        //     ]\n        //   }\n        // }\n        //\n        // denom is optionally null\n\n        var unitArray = [];\n\n        _(parseResult.unit.num).each(function (unitSpec) {\n            unitArray.push(\n                new Pow(unprefixify(unitSpec.name), new Int(unitSpec.pow)),\n            );\n        });\n\n        _(parseResult.unit.denom).each(function (unitSpec) {\n            unitArray.push(\n                new Pow(unprefixify(unitSpec.name), new Int(-1 * unitSpec.pow)),\n            );\n        });\n\n        var unit = new Mul(unitArray).flatten();\n\n        if (parseResult.type === \"unitMagnitude\") {\n            // in the first case we have a magnitude coefficient as well as the\n            // unit itself.\n            var coefArray = [new Float(+parseResult.magnitude)].concat(\n                unitArray,\n            );\n            var expr = new Mul(coefArray);\n            return {\n                parsed: true,\n                unit: unit,\n                expr: expr,\n                coefficient: parseResult.magnitude,\n                type: parseResult.type,\n            };\n        } else {\n            // in the second case it's just the unit with no magnitude.\n            return {\n                parsed: true,\n                unit: unit,\n                type: parseResult.type,\n            };\n        }\n    } catch (e) {\n        return {parsed: false, error: e.message};\n    }\n};\n\n_.extend(Unit.prototype, {\n    func: Unit,\n    args: function () {\n        return [this.symbol];\n    },\n    recurse: function () {\n        return this;\n    },\n\n    eval: function (vars, options) {\n        // This is called when comparing units. A unit doesn't affect the\n        // numerical value of its coefficient, so this needs to be 1.\n        //\n        // On the other hand, things must not evaluate to the same thing if\n        // they don't have the same type. I believe that's also true - form is\n        // checked before numerical equivalence. I do not know where, though.\n        // However, there are a couple tests checking this.\n        return 1;\n    },\n\n    getUnits: function () {\n        return [{unit: this.symbol, pow: 1}];\n    },\n\n    codegen: function () {\n        return \"1\";\n    },\n\n    print: function () {\n        return this.symbol;\n    },\n\n    tex: function () {\n        return this.symbol;\n    },\n\n    // Simplify units by replacing prefixes with multiplication\n    collect: function (options) {\n        if (_(baseUnits).has(this.symbol)) {\n            return this;\n        } else if (_(derivedUnits).has(this.symbol)) {\n            return derivedUnits[this.symbol].conversion;\n        } else {\n            throw new Error(\"could not understand unit: \" + this.symbol);\n        }\n    },\n});\n\nvar baseUnits = {\n    m: new Unit(\"m\"),\n    // Note: kg is the SI base unit but we use g for consistency\n    g: new Unit(\"g\"),\n    s: new Unit(\"s\"),\n    A: new Unit(\"A\"),\n    K: new Unit(\"K\"),\n    mol: new Unit(\"mol\"),\n    cd: new Unit(\"cd\"),\n};\n\nvar siPrefixes = {\n    a: new Pow(new Int(10), new Int(-18)),\n    f: new Pow(new Int(10), new Int(-15)),\n    p: new Pow(new Int(10), new Int(-12)),\n    n: new Pow(new Int(10), new Int(-9)),\n    u: new Pow(new Int(10), new Int(-6)),\n    m: new Pow(new Int(10), new Int(-3)),\n    c: new Pow(new Int(10), new Int(-2)),\n    d: new Pow(new Int(10), new Int(-1)),\n    da: new Int(10),\n    h: new Pow(new Int(10), new Int(2)),\n    k: new Pow(new Int(10), new Int(3)),\n    M: new Pow(new Int(10), new Int(6)),\n    G: new Pow(new Int(10), new Int(9)),\n    T: new Pow(new Int(10), new Int(12)),\n    P: new Pow(new Int(10), new Int(15)),\n    E: new Pow(new Int(10), new Int(18)),\n    // http://en.wikipedia.org/wiki/Metric_prefix#.22Hella.22_prefix_proposal\n    hella: new Pow(new Int(10), new Int(27)),\n};\n\n// Use these two values to mark a unit as either SI-prefixable or not.\nvar hasPrefixes = {};\nvar hasntPrefixes = {};\n\nvar makeAlias = function (str, prefixes) {\n    var splits = str.split(\"|\");\n    var coefficientStr = splits[0].trim();\n    var unitsStr = splits[1].trim();\n\n    var coefficient = Num.One;\n    if (coefficientStr !== \"\") {\n        coefficient = parse(coefficientStr).expr;\n    }\n\n    var numdenomStr = unitsStr.split(\"/\");\n    var numdenom = [coefficient];\n\n    if (numdenomStr[0]) {\n        numdenomStr[0]\n            .split(\" \")\n            .filter(function (x) {\n                return x !== \"\";\n            })\n            .map(function (x) {\n                numdenom.push(new Unit(x));\n            });\n    }\n\n    if (numdenomStr[1]) {\n        numdenomStr[1]\n            .split(\" \")\n            .filter(function (x) {\n                return x !== \"\";\n            })\n            .map(function (x) {\n                numdenom.push(new Pow(new Unit(x), Num.Div));\n            });\n    }\n\n    return {\n        conversion: new Mul(numdenom),\n        prefixes: prefixes,\n    };\n};\n\n// This is a mapping of derived units (or different names for a unit) to their\n// definitions. For example, an inch is defined as 0.0254 m.\n//\n// Definitions don't need to be in terms of base units. For example, tsp is\n// defined in terms of tbsp (which is defined in terms of cup -> gal -> L ->\n// m^3). However, units must get simpler. I.e. there's no loop checking.\n//\n// makeAlias takes two parameters:\n// * a string specifying the simplification to perform\n//   - a required pipe separates the constant factor from the base units\n//   - the constant factor is parsed by KAS\n//   - the base units are in a simple format which disallows exponents and\n//     requires multiplicands to be space-separated (\"m m\" rather than \"m^2)\n//     with an optional \"/\" separating numerator and denominator\n//   - prefixes are not allowed to be used in the converted to units\n//     (note that this restriction, the format of the string, and the choice to\n//     use a string in the first place are made out of laziness to minimize\n//     both typing and parsing)\n// * a boolean specifying whether or not it's acceptable to use SI units\n//\n// Where possible, these units are taken from \"The International System of\n// Units (SI)\" 8th edition (2006).\nvar derivedUnits = {\n    // mass\n    // The atomic mass unit / dalton.\n    Da: makeAlias(\"1.6605388628 x 10^-24 | g\", hasPrefixes),\n    u: makeAlias(\"| Da\", hasntPrefixes),\n\n    // length\n    meter: makeAlias(\"| m\", hasntPrefixes),\n    meters: makeAlias(\"| m\", hasntPrefixes),\n    in: makeAlias(\"254 / 10000 | m\", hasntPrefixes),\n    ft: makeAlias(\"3048  / 10000 | m\", hasntPrefixes),\n    yd: makeAlias(\"9144  / 10000 | m\", hasntPrefixes),\n    mi: makeAlias(\"1609344 / 1000 | m\", hasntPrefixes),\n    ly: makeAlias(\"9.4607 x 10^15 | m\", hasntPrefixes),\n    nmi: makeAlias(\"1852 | m\", hasntPrefixes),\n    Å: makeAlias(\"10^-10 | m\", hasntPrefixes),\n    pc: makeAlias(\"3.0857 x 10^16 | m\", hasntPrefixes),\n\n    // time\n    min: makeAlias(\"60 | s\", hasntPrefixes),\n    hr: makeAlias(\"3600 | s\", hasntPrefixes),\n    sec: makeAlias(\"| s\", hasntPrefixes),\n    // TODO(joel) make day work\n    day: makeAlias(\"86400 | s\", hasntPrefixes),\n    wk: makeAlias(\"604800 | s\", hasntPrefixes),\n    fortnight: makeAlias(\"14 | day\", hasntPrefixes),\n    shake: makeAlias(\"10^-8 | s\", hasntPrefixes),\n    olympiad: makeAlias(\"126200000 | s\", hasntPrefixes),\n\n    // temperature\n    \"°C\": makeAlias(\"1 | K\", hasntPrefixes),\n    \"°F\": makeAlias(\"5/9 | K\", hasntPrefixes),\n    \"°R\": makeAlias(\"5/9 | K\", hasntPrefixes),\n\n    // electric charge\n    e: makeAlias(\"1.6021765314 x 10^-19 | C\", hasntPrefixes),\n\n    // speed\n    c: makeAlias(\"299792458 | m / s\", hasntPrefixes),\n    kn: makeAlias(\"514/1000 | m / s\", hasntPrefixes),\n    kt: makeAlias(\"| kn\", hasntPrefixes),\n    knot: makeAlias(\"| kn\", hasntPrefixes),\n\n    // energy\n    J: makeAlias(\"| N m\", hasPrefixes),\n    BTU: makeAlias(\"1060 | J\", hasntPrefixes),\n    cal: makeAlias(\"4184 / 1000 | J\", hasPrefixes),\n    eV: makeAlias(\"1.602176514 x 10^-19 | J\", hasPrefixes),\n    erg: makeAlias(\"10^−7 | J\", hasPrefixes),\n\n    // power\n    W: makeAlias(\"| J / s\", hasPrefixes),\n    \"H-e\": makeAlias(\"80 | W\", hasntPrefixes),\n\n    // force\n    N: makeAlias(\"1000 | g m / s s\", hasPrefixes),\n    // \"lb\": makeAlias(\"4448 / 1000 | N\", hasntPrefixes),\n    // 4.4482216152605\n    lb: makeAlias(\"4448221615 / 1000000000 | N\", hasntPrefixes),\n    dyn: makeAlias(\"10^-5 | N\", hasntPrefixes),\n\n    // pressure\n    Pa: makeAlias(\"1 | N / m m m\", hasPrefixes),\n    bar: makeAlias(\"10^5 | Pa\", hasPrefixes),\n    \"㏔\": makeAlias(\"1/1000 | bar\", hasntPrefixes),\n    \"㍴\": makeAlias(\"| bar\", hasntPrefixes),\n    atm: makeAlias(\"101325 | Pa\", hasntPrefixes),\n    Torr: makeAlias(\"1/760 | atm\", hasntPrefixes),\n    mmHg: makeAlias(\"| Torr\", hasntPrefixes),\n\n    // area\n    ha: makeAlias(\"10^4 | m m\", hasntPrefixes),\n    b: makeAlias(\"10^−28 | m m\", hasPrefixes),\n    barn: makeAlias(\"| b\", hasPrefixes),\n    acre: makeAlias(\"4046.87 | m m\", hasntPrefixes),\n    skilodge: makeAlias(\"10^-31 | m m\", hasntPrefixes),\n    outhouse: makeAlias(\"10^-34 | m m\", hasntPrefixes),\n    shed: makeAlias(\"10^-52 | m m\", hasntPrefixes),\n\n    // volume\n    L: makeAlias(\"1/1000 | m m m\", hasPrefixes),\n    gal: makeAlias(\"3785/1000 | L\", hasPrefixes),\n    cup: makeAlias(\"1/16 | gal\", hasntPrefixes),\n    qt: makeAlias(\"1/4 | gal\", hasntPrefixes),\n    quart: makeAlias(\"| qt\", hasntPrefixes),\n    p: makeAlias(\"1/8 | gal\", hasntPrefixes),\n    pt: makeAlias(\"| p\", hasntPrefixes),\n    pint: makeAlias(\"| p\", hasntPrefixes),\n    \"fl oz\": makeAlias(\"1/8 | cup\", hasntPrefixes),\n    \"fl. oz.\": makeAlias(\"1/8 | cup\", hasntPrefixes),\n    tbsp: makeAlias(\"1/16 | cup\", hasntPrefixes),\n    tsp: makeAlias(\"1/3 | tbsp\", hasntPrefixes),\n\n    // rotational\n    // \"rad\":\n    rev: makeAlias(\"2 pi | rad\", hasntPrefixes),\n    deg: makeAlias(\"180 pi | rad\", hasntPrefixes),\n    \"°\": makeAlias(\"| deg\", hasntPrefixes),\n    arcminute: makeAlias(\"1/60 | deg\", hasntPrefixes),\n    arcsec: makeAlias(\"1/3600 | deg\", hasntPrefixes),\n\n    // dimensionless\n    // \"B\": makeAlias(\"10 | dB\", hasntPrefixes), // XXX danger - logarithmic\n    // \"dB\"\n    // \"nP\"\n    Hu: makeAlias(\"1000 | dB\", hasPrefixes),\n    dozen: makeAlias(\"12 |\", hasntPrefixes),\n    // XXX\n    mol: makeAlias(\"6.0221412927 x 10^23 |\", hasPrefixes),\n    \"%\": makeAlias(\"1/100 |\", hasntPrefixes),\n    percent: makeAlias(\"| %\", hasntPrefixes),\n    ppm: makeAlias(\"1/1000000 |\", hasntPrefixes),\n\n    // electric / magnetic\n    V: makeAlias(\"1000 | g m m / s s C\", hasPrefixes),\n    C: makeAlias(\"| A s\", hasPrefixes),\n    ampere: makeAlias(\"| A\", hasntPrefixes),\n    Ω: makeAlias(\"| V / A\", hasPrefixes),\n    ohm: makeAlias(\"| Ω\", hasntPrefixes),\n    F: makeAlias(\"| C / V\", hasPrefixes),\n    H: makeAlias(\"| ohm s\", hasPrefixes),\n    T: makeAlias(\"1000 | g / C s\", hasPrefixes),\n    Wb: makeAlias(\"1000 | g m m / C s\", hasPrefixes),\n\n    // photometry\n    // TODO not sure this is right\n    lm: makeAlias(\"pi x 10^4 | cd / m m\", hasntPrefixes),\n    lx: makeAlias(\"| lm / m m\", hasntPrefixes),\n    nit: makeAlias(\"| cd / m m\", hasntPrefixes),\n    sb: makeAlias(\"10^4 | cd / m m\", hasntPrefixes),\n    stilb: makeAlias(\"1 | sb\", hasntPrefixes),\n    apostilb: makeAlias(\"1 / pi x 10^(-4) | sb\", hasntPrefixes),\n    blondel: makeAlias(\"| apostilb\", hasntPrefixes),\n    asb: makeAlias(\"| apostilb\", hasntPrefixes),\n    la: makeAlias(\"| lm\", hasntPrefixes),\n    Lb: makeAlias(\"| lm\", hasntPrefixes),\n    sk: makeAlias(\"10^-7 | lm\", hasntPrefixes),\n    skot: makeAlias(\"| sk\", hasntPrefixes),\n    bril: makeAlias(\"10^-11 | lm\", hasntPrefixes),\n\n    // other\n    Hz: makeAlias(\"| / s\", hasPrefixes),\n};\n\nexport const Zero = Num.Zero;\nexport const One = Num.One;\n","/* eslint-disable */\nimport _ from \"underscore\";\n\n// Assumes that both expressions have already been parsed\n// TODO(alex): be able to pass a random() function to compare()\nexport const compare = function(expr1, expr2, options) {\n    var defaults = {\n        form: false, // Check that the two expressions have the same form\n        simplify: false, // Check that the second expression is simplified\n    };\n\n    /* Options that could be added in the future:\n        * - Allow ratios: e.g. 3/1 and 3 should both be accepted for something\n        *   like slope\n        * - Allow student to choose their own variable names\n        */\n\n    if (options !== undefined) {\n        // eslint-disable-next-line no-undef\n        options = _.extend(defaults, options);\n    } else {\n        options = defaults;\n    }\n\n    // TODO(CP-1614): Figure out how to make these messages translatable\n\n    // Variable check\n    var vars = expr1.sameVars(expr2);\n    if (!vars.equal) {\n        var message;\n        if (vars.equalIgnoringCase) {\n            message =\n                \"Check your variables; one or more are using \" +\n                \"the wrong case (upper or lower).\";\n        } else {\n            message =\n                \"Check your variables; you may have used the wrong \" +\n                \"letter for one or more of them.\";\n        }\n        return {\n            equal: false,\n            wrongVariableCase: vars.equalIgnoringCase,\n            wrongVariableNames: !vars.equalIgnoringCase,\n            message: message,\n        };\n    }\n\n    // Semantic check\n    if (!expr1.compare(expr2)) {\n        return {equal: false, message: null};\n    }\n\n    // Syntactic check\n    if (options.form && !expr1.sameForm(expr2)) {\n        return {\n            equal: false,\n            message: \"Your answer is not in the correct form.\",\n        };\n    }\n\n    // Syntactic check\n    if (options.simplify && !expr1.isSimplified()) {\n        return {\n            equal: false,\n            message: \"Your answer is not fully expanded and simplified.\",\n        };\n    }\n\n    return {equal: true, message: null};\n};\n"],"names":["parser"],"mappings":"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K,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACvhB,cAAc,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,C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AAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;AACroM,cAAc,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC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C,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;AACzC,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;AACxC,IAAI,EAAE,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC;AACnB,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AACvC,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AACvC,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AACvC,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,CAAC,CAAC,CAAC;AACvC,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,GAAG,CAAC,EAAE,CAAC,CAAC;AACxC,IAAI,CAAC,EAAE,IAAI,GAAG,CAAC,IAAI,GAAG,CAAC,EAAE,CAAC,EAAE,IAAI,G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"}